## What is code quality?
> code that is good(high quality) and code that is bad (low quality)

## Why Code Quality Matters?
> quality impacts how safe, secure, and reliable the codebase is.

> good code quality means that the code:
- Does what it should.
- Follows a consistent style.
- Is easy to understand.
- Has been well-documented.
- Can be tested.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## How to Measure Code Quality?

5 key traits to measure for higher quality.

1. Reliability
- it measures the probability that a system will run without failure over a specific period of operation. 
- It relates to the number of defects and availability of the software

2. Maintainability 
- it measures how easily software can be maintained. 
- It relates to the size, consistency, structure, and complexity of the codebase. 
- And ensuring maintainable source code relies on a number of factors, such as testability and understandability.

3. Testability 
- it measures how well the software supports testing efforts. It relies on how well you can control, observe, isolate, and automate testing

4. Portability 
- it measures how usable the same software is in different environments. 
- It relates to platform independency.
- test code on different platforms, rather than waiting until the end of development. 
- It’s also a good idea to set your compiler warning levels as high as possible — and use at least two compilers.

5. Reusability measures whether existing assets — such as code — can be used again. Assets are more easily reused if they have characteristics such as modularity or loose coupling.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## How to Improve Code Quality?

1. Use a Coding Standard
2. Analyze Code — Before Code Reviews
3. Follow Code Review Best Practices
4. Refactor Legacy Code (When Necessary)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is SonarQube

> Sonar is a web based code quality analysis tool for Maven based Java projects. 
- It covers a wide area of code quality check points which include: Architecture & Design, Complexity, Duplications, Coding Rules, Potential Bugs, Unit Test etc.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Why use SonarQube ?

> Sonar covers the 7 sections of code quality
1. Architecture and Design
2. Unit tests
3. Duplicated code
4. Potential bugs
5. Complex code
6. Coding standards
7. Comments
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What are the advantages of using SonarQube?

> SonarQube is open source
> SonarQube supports for various languages like Java, C#
> SonarQube reports for duplicate code, unit testing, code coverage, code complexity historical
> We can integrate SonarQube with build tools like ant, gradle
> SonarQube has Eclipse plugin like Sonarlint
> SonarQube supports external plugins like plugin for ldap
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What are the main components of SonarQube Platform ?

SonarQube plugin for languages
SonarQube Scanner
SonarQube Server
SonarQube Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What are Quality Profiles in SonarQube?

> The Quality Profiles service is central to SonarQube, here we DEFINE SETS OF RULES (ex: Methods should not have a Cognitive Complexity greater than 15).
- Ideally, all projects will be measured with the same profile for any given language, but that's not always practical. For instance, you may find that:
The technological implementation differs from one application to another (for example, different coding rules may apply when building threaded or non-threaded Java applications). You want to ensure stronger requirements on some of your applications (internal frameworks for example).
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What are Quality Gates in SonarQube?

> A quality gate is the best way to enforce a quality policy in your organization. 

> Quality Gates can be defined as a set of threshold measures set on your project like 
- Code Coverage, Technical Debt Measure, 
- Number of Blocker/Critical issues, 
- Security Rating/ Unit Test Pass Rate and more.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## How to setup your Quality Gates?

> By default, a quality gate called as ‘SonarQube way’ is activated and applied to all your projects. 
- We can also create new Quality Gates and define customized thresholds. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is role of database in SonarQube?

> Sonar uses a Derby or H2 as default database. 
- When running Sonar, it says that these databases may only be used for evaluation. We can change this default database and use our custom DB.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Explain architecture of SonarQube?

Code to be Analyze ---> Sonar Scanner(code analysis) --
 --> SonarQube Server [Computer engine, elastic-search server, sonar web-server] 
 <---> SonarQube DB
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## How to create reports in SonarQube?

> To create reports using SonarQube
mvn clean install

mvn sonar:sonar -Dsonar.issuesreport.html.enable=true
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is difference between sonarlint and sonarqube?

> SonarLint lives only in the IDE (IntelliJ, Eclipse and Visual Studio). 
- Its purpose is to give instantaneous feedback as you type your code

> In SonarQube, we can integrate PDM, CodeStyle and many other checker 
- In SonarLint, we cann't 

> SonarQube is a server where you can host your projects and execute analysis, whereas 
- SonarLint is an agent that allow us to connect with this SonarQube and execute the analysis remotely.