# git init [repository name]
> used to start a new repository.

# git clone [url]  
> used to obtain a repository from an existing URL.

# git add [file] 
> adds a file to the staging area

# git commit
# git commit -m “[ Type in the commit message]” 
- it records or snapshots the file permanently in the version history.

# git push [variable name] master  
> This command sends the committed changes of master branch to your remote repository
- EX - git push origin master 
 
# git pull origin ASD_DEVELOPMENT
- it will pull the code from ASD_DEVELOPMENT feature branch.

# git tag [commitID]  
- it is used to give tags to the specified commit.

# git checkout [branch name]  
- it is used to switch from one branch to another.

# git checkout -b [branch name]  
- This command creates a new branch and also switches to it.
############### git reset #############
# git reset <file>
- unstages the file, but it preserves the file contents.

# git reset [commit_id]
- undoes all the commits after the specified commit and preserves the changes locally.

# git reset -hard [commit_id] 
- it discards all history and goes back to the specified commit.

############## TO DELETE ##############

# git rm [file] 
- deletes the file from your working directory and stages the deletion.

#git branch -d [branch name]  
- deletes the feature branch.
=======================================
######### TO VIEW COMMIT/CODE #########

############### git log ###############
> git log 
- This command is used to list the version history for the current branch

> git log -2
- return last 2 logs

# git log -follow[file] 
- 
=======================================
# git show 

# git show [commit]
- command shows the metadata and content changes of the specified commit.

# git status  
> This command lists all the files that have to be committed.

# git hist

---------------------------------------
############# git diff ################
## git diff 
- shows the file differences which are not yet staged

## git diff --staged
- shows the differences between the files in the staging area and the latest version present.

## git diff [first branch] [second branch]
- shows the differences between the two branches mentioned.

=======================================
############# git stash ###############

# git stash save  
- This command temporarily stores all the modified tracked files.

# git stash pop  
- This command restores the most recently stashed files.

# git stash list  
- This command lists all stashed changesets.

# git stash drop  
- This command discards the most recently stashed changeset