What is PriorityQueue?

> Priority Queue implemented using Binary Min Heap.
> Heap Property:
- It is a complete Tree
- It is a Binary Tree
- Every node is smaller than its left and right child. Known as MIN-HEAP.
- If every node is bigger than its left and right child. Known as MAX-HEAP.

Heap is Loosely Sorted
- In heap, we know that root is always smaller than left and right child, but there is no mention if left child is smaller than right or not.
- Good to maintain min or max at run time.

> Heaps are data structures that enable us to represent Binary trees without any pointers
> Thus no extra memory is required to store pointers in heaps, as we do it in a normal Binary tree.

              1 {0}

         /             \

     3 {1}                6 {2}

    /      \              /   

 5 {3}      9 {4}      8 {5}      

> array representation : {1,3,6,5,9,8}
> index :                [0,1,2,3,4,5]
     
>Index of LEFT Child of a element at index i :: Left(i) = (2 *** i) + 1;
>Left child of array[1] is array[3];
 
>Index of RIGHT Child of a element at index i :: Right(i) = (2 *** i) + 2;
>Right child of array[1] is array[4];

>Index of PARENT of a element at index i :: Parent(i) = (int) (i-1)/2;
>Parent of array[4] is array[1];
>Parent of array[5] is array[2];

