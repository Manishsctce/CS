################ AGILE ################
> agile methodology is described as “iterative” and “incremental.
> Agile development provides opportunities to assess the direction throughout the development lifecycle.
> we can re-evaluate the direction after 2week

Agile Development Cycle
1. Requirement
2. Plannin
3. Design
4. Development
5. Release 
6. Track & Monitor

## ADVANTAGE ##
> agile empowers teams to continuously replan their release to optimize its value throughout development, 
> allowing them to be as competitive as possible in the marketplace

 In waterfall, development teams only have one chance to get each aspect of a project right. 
 In an agile paradigm, every aspect of development — requirements, design, etc. — is continually revisited
======================================= 
################ SCURM ################
> Scrum is an iterative and incremental agile software development framework for managing product development
> Scrum has only three roles: Product Owner, Team, and Scrum Master

## ADVANTAGE ##
> More transparency and project visibility: 
- With daily stand-up meetings, the whole team knows who is doing what, eliminating many misunderstandings and confusion

> Easy to accommodate changes: 
- With short sprints and constant feedback, it’s easier to cope with and accommodate changes

## DISADVANTAGE ##
> Poorly defined tasks can lead to inaccuracies

> daily face-to-face communication among all team members and disciplines in the project.
> during a project the customers can change their minds about what they want and need (often called "requirements churn")
> Each day during the sprint, a project team communication meeting occurs. This is called the daily scrum (meeting) (or "stand-up meeting") 
> no pm
=======================================
The responsibilities of the traditional project manager role are split up among these three Scrum roles. 
Scrum has five meetings: 
1. Backlog Grooming (aka Backlog Refinement), 
2. Sprint Planning, 
3. Daily Scrum (aka 15-minute standup), 
4. the Sprint Review Meeting, and 
5. the Sprint Retrospective Meeting.
-----------------------------------
We recommend using Scrum if: 

- The project requirements will change and evolve 
- Continuous feedback is required
- You have to figure out how to do a large part of the work because you haven't done it before
- You don’t need to commit to a fixed release date
- The project team wants autonomy
- You need to deliver software on a regular basis