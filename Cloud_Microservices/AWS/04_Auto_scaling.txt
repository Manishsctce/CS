########### Auto Scaling (AS)
Is an AWS feature that allows your AWS compute needs (EC2 instances fleet) to grow or
shrink depending on your workload requirements
out
a, sale
Auto scaling ensures that you have the right number of AWS EC2 mstances for your
needs at all times
Auto Scaling helps you save cost by cutting down the number of EC2 instances when
not needed, and scaling out to add more instances only when it is required
############ Components #############
Auto Scaling components:
Launch Configuration:
Is the configuration template used to create new EC2 instances for the ASG,
defines parameters like:
- Instance family, instance type, AMI, Key pair, Block devices, and Sec groups
are parameters defined in the launch configuration
As
AS Group:
Is a logical grouping of EC2 instances.
ont In
Scaling Policy (Plan)
• Determines when/if and how the ASG scales or shrinks ( On-demand/Dynamic
scaling, Cyclic/Scheduled scaling)

## Auto Scaling Groups (ASG)
Auto Scaling components:
AS Group:
Is a collection of EC2 instances managed by an Auto
Scaling Policy
Auto Scaling group
• An ASG can have a minimum, maximum, and
desired capacity of EC2 instances
Minimum size
Scale out as needed
DOLFINed
Can be edited after it is created
Desired capacity
Maximum size
## Components
LC2
Launch Configuration:
• Can be created from AWS Console or CLI
ASGI
• You can create a launch configuration from scratch, or
• You can use an existing/running EC2 instance to create the launch configuration
- This is provided that the AMI used to launch this instance does still exist on2
AWS
Eiz
AsG
- EC2 instance tags, and any additional block store volumes created after the
instance launch will not be taken into account
If you want to change your launch configurations, you have to create a ñew one,
make the required changes, and use that with your auto scaling groups
=======================================
######## Auto Scaling features ######## v3

> AS can be configured from Console, CLI, SDKS, and APIS

> Auto Scaling can span Multi-AZs WITHIN THE SAME AWS REGION. Hence, it can be used to create Fault Tolerant designs on AWS
- Auto Scaling can NOT span across multiple Regions

> Cost: There is no additional cost for launching AS Groups. You pay for what you use of EC2 instances
- AS can grow or shrink your EC2 instances base, according to your needs, hence, can play an important role in Cost månagement

> IT WORKS WELL WITH AWS ELB, CLOUD WATCH, AND CLOUD TRAIL

> AS is compliant with PCI DSS

> You can determine which subnets will AS Groups use to launch new instances in each AZ 

> Auto Scaling service ALWAYS TRIES TO DISTRIBUTE EC2 INSTANCES EVENLY ACROSS AZs where it is enabled
- If Auto Scaling fails to launch instances in an AZ (for AZ failure or capacity unavailability..etc), it will try in the other AZs defined for this AS Group until it succeeds
=======================================
########### AS - AZ Rebalance ######### v4

> If AS finds that the number of EC2 instances launched by an ASG into subject AZ IS NOT BALANCED (EC2 instances are not evenly distributed across AZs), AS WILL INITIATE A RE-BALANCING ACTIVITY

- The target of the activity would be to reach an even distribution of instances between AZs
- AS does that by launching new EC2 instances in the AZs that have less EC2 instances first, then terminating Ec2 instances from the AZs that had more EC2 instances
» This would help avoid impact on current performance while AZ
Rebalance is going on

## WHAT CAN CAUSE AN IMBALANCE OF EC2 INSTANCES:
> You manually change the AZs where your AS is in effect (adding or removing AZs)

> Manually requesting termination of EC2 instances from your ASG

> An AZ that did not have enough EC2 capacity, now has enough capacity and it is one of your ASG Azs

> An AZ with Spot instances market price meeting your bid price
=======================================
### AS Group - Attaching a Running EC2 instance ## v5

> Using AWS console or CLI, You can attach a running EC2 instance to an AS Group, if the below conditions are met
- Instance is in running state (not stopped or terminated)

- AMI used to launch the instance still exists
- Instance is not part of another AS Group
- Instance is in the same AZs of the AS Group
> If the existing EC2 instances under the AS group, plus the one to be added, exceed the maximum capacity of the ASG, the request will fail, EC2 instance won't be added
=======================================
###### ###### v6

[12:43 PM, 1/26/2020] Manish Agrawal: Adding an ELB to the ASG
You can attach one or more (classic) ÉLBS to your existing AS Group
The ELB(s) must be in the same region as the AS Group
Once you do this, any EC2 instance existing or added by the AS Group will be
automatically registered with the ASG defined ELB(s)
• You do not need to register those instances manually on the ASG defined ELBS
• The ELB(s) will then become the focal point før anyinbound traffic destined to the
ASG EC2 instances
Instance and the ELB(s) must be in the same VPC
[12:44 PM, 1/26/2020] Manish Agrawal: AS Group – Registering/De-Registering EC2 instances to ELBS
If an ELB is attached to the AS Group, then the ELB and Instance must be in the same
VPC, and are in the same Region as the AS Group
Auto Scaling adds the Attached EC2 instances to the ELB(s) defined to the AS Group
Once the EC2 instance is added to the AS Group, it will be automatically
registered with the ELB(s) defined under the AS Group
LFINed
If the AS Group had an ELB defined, detaching the instance will also de-register it from the
36D
ELB
If connection draining was enabled under the ELB, Auto Scaling will honor it
=======================================
###### ASG – Health Checks ###### v7


> Auto Scaling classifies its EC2 instances health status as either Healthy or Unhealthy
By default, AS uses EC2 Status Checks only to determine the health status of an Instance
When you have one or more ELBS defined with the AS Group, you can configure Auto Scaling to
use "both" the EC2 Health Checks and the ELB Health Checks to determine the Instances health
status

Health Check Grace period:
By default is 300 seconds
- Is the time Auto Scaling waits from the time an Instance comes into service (become
In-Service) before checking its health,status
A value of "zero" means no grace period and the instance health is checkedonce it is In-
service

> Until the Grace Period timer expires, any unhealthy status reported by EC2 status checks, or
the ELB attached to the AS Group, will not be acted upon.
After Grace Period expires, Auto Scaling would consider an Instancę unhealthy in any of the
following cases:
• EC2 Status checks report to Auto Scaling an instance status other than running
- If the instance status is impaired due to a host Hardware or Software Problem
• If ELB health checks are configured to be used by the Auto Scaling, then if the ELB
reports the Instance as "Out-of-Service"
- If you have multiple ELBS attached to the AS Group, if any of them reports the
EC2 instance status as "Out-of-Service".
One source reporting the instance as unhealthy is enough for Auto Scaling to mark it for
replacement

## ASG – Unhealthy Instance Termination
> Once Auto Scaling identifies an instance as unhealthy, it gets scheduled for termination
- The instance will never recover its health again automatically

> During a very short time period, you can use the AWS Command (as-set-instance-health) to set the instance health back to healthy
- If the Auto Scaling started terminating the Instance, you will get an error if you try to apply this command

> Unlike AZ Rebalancing, termination of unhealthy instances happens first, then Auto Scaling attempts to launch new instances to replace the ones terminated

> Elastic IP and EBS volumes gets detached from the terminated instances, you need to manually attach them to the new instances
=======================================
###### ###### v8

[4:07 PM, 1/26/2020] Manish Agrawal: AS and Spot Instance
You can choose to use Spot instances in your launch configuration, and specify your bid price
Auto Scaling treats the spot instance the same way it treats on-demand instances
You can NOT mix and match on-demand with Spot instances in your AS Jaunch configuration
If you want to change the bid price, you have to create a new launch configuration
If the AS tries to launch spot instances in an AZ unsuccessfully because of the market price, it
will try in another AZ if its market price drops below bid price,
If the original AZ's spot market price drops below the bid price, then the Auto scaling
process will try to rebalance between the two AZs
[4:08 PM, 1/26/2020] Manish Agrawal: AS and SNS Notifications
You can configure Auto Scaling to send a SNS email notification whenever:
• An Instance is launched
An Instance is Terminated
• An Instance fails to launch
DOLFINed
An Instance fails to terminate
[4:08 PM, 1/26/2020] Manish Agrawal: Merging Auto Scaling Groups
Can only be done from the CLI (not AWS Console)
ARZ
You can merge multiple, single AZ, Auto Scaling Groups into a single, one Multi-Az, Auto
Scaling group
FASAI
To do this:
Re-zone one of the groups to cover/span the other AZs for the other ASGS
Delete the other ASGS
This can be used in merging ASGS with/without ELB attached to them
The resulting ASG must be one of the pre-existing ASGS, not a new one
DOLFIN
=======================================
###### ###### v11

[4:12 PM, 1/26/2020] Manish Agrawal: AS Policy Scaling actions
Scale-Out :
Is the process in which more EC2 instances are launched by the scaling policy
Scale-In
s the process in which EC2 instances are terminated by the scaling policy
It is always recommended to create a scale-in event for each scale-out event you create
[4:12 PM, 1/26/2020] Manish Agrawal: ASG - Scaling Policies
Scaling Policies:
- Manual Scaling
» Maintain a current number of instances all the time
» Manually change ASG's min/desired/max, attach/detach instances
Des
- Cyclic (schedule based) scaling
» Predictable load change
DOLFINed
On-demand/Dynamic (Event based) scaling
» Scaling in response to an event/alarm
md 2am
Tue 1 agmm
coO7
An ASG can have multiple policies attached to it at any time
[4:12 PM, 1/26/2020] Manish Agrawal: ASG – Schedule/Cyclic Scaling
Use for predictable load change (increase or decrease)
07
You need to configure a scheduled action(s) for a scale out at a specified date/time and
to a required capacity
You can configure this action to happen once or at a recurring schedule
10 Tue lu
A scheduled action must have aunique date/time,
You can not configure two scheduled activities at the same date/time
メ
You can update/edit a scheduled action after you have created it
Zam
Tue
DOLFIN
You can use AVWS čonsole or CLI for this
=======================================
###### ###### v12

[4:17 PM, 1/26/2020] Manish Agrawal: ASG – Dynamic/On-demand Scaling
Is scaling out, or in, in response to an alarm (demand)
An alarm is an object that watches over a single metric (CPU utilization, mémory,
network in/out.etc)
You need to have a scale-out and a scale-in policy configured, which will instruct Auto
Scaling what to do (Scale out or in) in response to Alarms -770r.
DOLFIN
You can use Cloud Watch to monitor and generate the Alarms
[4:17 PM, 1/26/2020] Manish Agrawal: Dynamic/On-Demand – Simple Scaling
Simple ścaling:
• Single adjustment (up or down) in response to an alarm
• Waits for a cool down timer to expire before responding to more alarms
Cool down Period:
Is the period of time auto scaling waits after a scaling activity (launching a new instance
or terminating one instance) until the effect of the scaling activity becomes visible
tEL
• Default is 300 seconds, the time during which ASG will not respond to any additional
alarms
cy chl
It is not supported for scheduled scaling or step on-demand scaling
DOLFIN
=======================================
###### ###### v13
=======================================
###### ###### v14
=======================================
###### ###### v15