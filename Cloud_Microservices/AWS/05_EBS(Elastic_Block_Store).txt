## EBS Types 
1. General purpose 
> SSD backed (Solid state drives)
> Are better for transactional workloads such as small databases & boot volumes, Dev/Test environment, Low Latency interactive apps where performance is highly dependent on IOPS 

> Volume Sizes 1-16TB 
> Max IOPS - 10,000 


2. Provisioned IOPS 
=======================================
###### EBS Block storage ###### V1 
> Two types of Block store devices are supported: 
1. Elastic Block store (EBS) 
- Persistent 
- Network attached virtual drives 

2. Instance store 
- Basically the virtual hard drive on the host allocated to this EC2 instance 
- It is called ephimeral storage or temporary storage
- Limited to 10GB per device  


> There are two type of blocks store available for Amazon easy to instance they are

1. Elastic block store 
- it is persistence storage
- EBS backed EC2 instance (i.e. root volume of which is EBS) can be stopped, reboot, restart and terminated

2. Instance store (is a virtual hard drive allocated to the EC2 instance on the host)
- Instance store-backed EC2 instances boot from an AMI stored on S3
- Ephemeral storage (non persistent storage)
- EC2 instance cannot be stopped, can only be rebooted or terminated - reboot will not erase the instance store data
- Terminate will erase the data

### EBS Device Volumes 

> EBS volume behave like raw, unformatted, external block storage device that you can attach(Mount) to your EC2 instances
> EBS volume are block storage device suitable for database style data that requires frequent read and write

> EBS volume attached to your instance through the AWS network like virtual hard drive
> An EBS volume can attach to a single EC2 instance only at a time

> Both EBS volume and EC2 instance must be in the same AZ 
- you cannot attach a volume in one AZ to an EC2 instance in a different AZ

> An EBS volume data is replicated by AWS across multiple servers in the same AZ to prevent data loss resulting from any single AWS component failure 
=======================================
#V2 

## Difference between Instance Store Vs EBS? 

> IOPS Performance 
> Use instance store instead of EBS if very high IOPS rate is required
- Instance store although cannot provide for data persistence, but it can provide for much higher IOPS compared to network attached storage EBS storage
- remember that instance store is a virtual hard disk space allocated to the instance on the localhost 
- it is worth noting that not all newer EC2 instance support instance store volume
=======================================
######## EBS Snapshots ########## v3 

> EBS snapshot are point-in-time image/copies of your EBS volume
> any data returned to the volume after the snapshot process is initiated will not be included in the resulting snapshot (but will be included in future incremental updates)
> Per add account up to 5,000 EBS volumes can be created
> Per account up to 10,000 EVS snapshot can be created
> TVS snapshot are stored on S3 however you cannot access them directly you can only access them through easy to api
> This is unlikely instant store in EMI where you can specify a S3 bucket of your own

#### Characteristics
> Why EVS volume are easy specific snapshot are regional is specific
> To migrate and EVS from one is easy to another is to another create a snapshot reason is specific and create an EBS volume from the snapshot in the intended ages
> You can create restore a snapshot to an EBS volume of the same order large size than the original volume size from which the snapshot was created but you cannot restore and EVS volume snapshot to a smaller volume size

## EVS exercise during snapshot process #
> You can take a snapshot of a non roti vs volume while the volume is a news on a running easy to instance
> This menu can still access it while the snapshot is being processed
> Poverty snapshot will only include data that is already written to your volume
> Any data cache ID by the operating system OS or in memory will not be included which mean the snapshot cannot be 100% consistent
=======================================
#### EBS snapshot ####### v4

> This snapshot is created immediately but it may stay in pending status until the full snapshot is complete(all changed data blocks are copied to S3) the status then change to complete
- This may take few hours to complete, especially for the first time snapshot of a vol

> During the period when snapshot status is pending, you can still access the volume but I/O might be slower because of the snapshot activity

> While in pending state, an in progress snapshot will not include data from ongoing read and write to the volume 
- this is why for a complete snapshot you need to stop I/O or unmount the volume if possible(or stop the instance for root volumes)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## EBS snapshot consistency

> To take complete(consistent) snapshot of your non-root EBS volume

1. Pause file write to the desired volume for enough time to take a snapshot

2. if you can't pause file write, you need to unmount detach the volume from the EC2 instance, take the snapshot and then remount the volume to ensure a consistent and complete the snapshot

> you can re-Mount the volume while the snapshot status is pending 
- this mean the volume does not have to deatached until the snapshot completes

> To create snapshot for root(boot)EBS volume you should stop the instance first and then take the snapshot
> Be careful if you have any instance-store volume on the EC2 instance, their data will be lost once you stop the instance

## EBS incremental snapshot
> EBS snapshots are stored incrementally
> For low cost storage on S3 and guarantee to be fully restore data from the snapshot
- What you need is a single snapshot then further snapshots will only carry the changed blocks (incremental updates) 
- Therefor you do not need to have multiple full/complete copies of the snapshot(less storage, fastest updates)

> EBS snapshots are asynchronously created 
- this refer to the fact that updates or changes to snapshot do not have to happen immediately when the respective volume data change

> You are charged for: 
- data transfer to S3 from your EVS volume you are taking a snapshot 
- storage on S3
=======================================
##EBS encrypted support

> EBS encryption is supported on all EBS volume type and all EC2 instance families
> Snapshots of encrypted volume are also encrypted
> Creating and EBS volume from an encrypted snapshot will result it an encrypted volume.

##EBS Data encryption at rest

> Data encryption at rest me encrypting data while it is stored on the data storage device
> There are many ways you can encrypt data on an EBS volume at rest, while the volume is attached to an EC2 instance
- Use 3rd party EBS volume(SSD or HDD) encryption tool
- Use encrypted EBS volume
- Use encryption at the OS level (using data encryption plugin/driver)
- Encrypt data at the application level before storing it to the volume
- Use encrypted file system on top of the EBS volume

##EBS encryption data in transit

> Remember that EBS volume are not physically attached to the EC2 instance rather they are virtually attached through the AWS infrastructure
- This means when you encrypt data on an EBS volume, data is actually encrypted on the EC2 instance then transferred encrypted, to be stored on the EBS volume
- This mean data in transit between EC2 and encrypted EBS volume is also encrypted

> Data at rest in the EBS volume is also encrypted

## EBS encryption

> Encrypted volume are accessed exactly like unencrypted one basically encryption is handle transparently.
> you can attach an encrypted and unencrypted volume to the same EC2 instance (but the instance has to support encrypted volume)
=======================================
########## EBS encryption ######### v7
> There is no direct way to change the encryption state of a volume
> To change the state(indirectly) you need to follow either of the following two way
1. Attach in new encrypted EBS volume to the EC2 instance that has the data to be encrypted then 
- mount the new volume to the EC2 instance 
- copy the data from the un-encrypted volume to the new volume 
- both volume must be on the same EC2 instance

2. Create a snapshot of the unencrypted volume 
- copy the snapshot and choose encryption for the new copy, this will create an encrypted copy of the snapshot 
- use this new copy to create an EBS volume, which will be encrypted too
- attach the new encrypted, EBS volume to the EC2 instance
- you can delete the one with the un-encrypted data

#### Root ebs volume encryption
> There is no direct way to change the encryption state of volume

> There is an indirect workaround to this
- Launch the instance with EBS volume required 
- do whatever patching or install application 
- create an AMI from the EC2 instance 
- copy the AMI and choose encryption while copying 
- this result it an encrypted AMI that is private 
- use the encrypted AMI to launch new EC2 instance which will have the EBS root volume encrypted

### EBS volume/snapshot - encryption key
> To encrypt a volume or a snapshot, we need an encryption key called Customer Master Key(CMK) and are managed by Key Management Service(KMS)

> When encrypting 1st EBS volume, AWS KMS create a default CMK key, 
- this key is used for your first volume encryption, encryption of a snapshot created from this volume and subsequent volume created from these snapshot

> After that, each newly encrypted volume is encrypted with the Unique /separate AES256 bit encryption key 
- this key is used to encrypt the volume it's snapshot and any volume created from this snapshot

##Changing encryption key
> You cannot change the encryption key used to encrypt an existing encrypted snapshot or encrypted EBS volume
- If you want to change the key, copy create a copy of the snapshot and specified during the copy process that you want to re-encrypt the copy with a different key
- this come in handy when you have a snapshot that was encrypted using your default CMK key and you want to change the key in order to be able to share the snapshot with other account

## EBS volume migration
> EBS volume are AZ specific(can be used in the AZ where they are created only)
> To move or migrate your EBS volume to another AZ in the same region, 
- create a snapshot of the volume 
- use the snapshot to create a new volume in the new AZ

> to move or migrate your EBS volume to another region 
- you need to create a snapshot of the volume 
- copy the snapshot and specify the new region where it should be 
- in the new region create a volume out of the copied snapshot

=======================================