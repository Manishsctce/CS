##### Internet DNS Tree Hierarchy #####
## Root Servers (.) - root-servers.org
- It is contacted by name servers that cannot resolve the name.
- It contacts Top-level name servers if name mapping is not known. 
- It then gets the mapping and return the IP address to the host. 

## Generic Top Level Domains(TLDs) 
- It have info abt Authoritative domain servers and know names and IP address of each Authoritative Name server for the 2nd level domain
EXAMPLE: .com, .net, .org, .biz, .edu, .mil 
- There are hundred/thousand of these

## .au, .us, .eu, .uk, .in 
- These are called Geographic TLDs 


## Authoritative Name Servers 
- It can be maintained by organisation or service provider. 
- In order to reach "ccna.cg.in" we have to ask to root DNS server that will provide out of the top level domain then do the authoritative domain name server which actually contains IP address so the authoritative  server and return the associated IP address

## Inverse domain

## www.amazon.com. (Trailing dot is needed)
- This is called Fully Qualified Domain Name(FQDN) 

## www.amazon.com 
- This is called sub-domain 
=======================================
########## NAMESPACE ########
> A Namespce map each address to a unique name 
1. Flat Namespce
- It is in sequence of character without any structure
- cannot be used for large network. 

2. Hierarchy Namespce
- name is made of several path
- in this method, namespace can be decentralised
=======================================
############ DNS ##############
> DNS is a host name to IP address translation 
- It is an application layer protocol
- previously, all the host name were saved in host .txt file 

> Forward & Reverse DNS Lookups
> It uses TCP port 53 and UDP port 53 
> DNS support 13 root name server (A to M) 

=======================================
############ ROUTE 53 #################
> Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.

> It provides 3 main functions: 
1. DOMAIN REGISTRATION
> allows you to register domain names

2. DOMAIN NAME SYSTEM (DNS) SERVICE
> translates friendly domains names like www.example.com into IP addresses like 192.0.2.1

> responds to DNS queries using a global network of authoritative DNS servers, which reduces latency

> can route Internet traffic to CloudFront, Elastic Beanstalk, ELB, or S3. 
- There’s no charge for DNS queries to these resources

3. HEALTH CHECKING
> can monitor the health of resources such as web and email servers.

> sends automated requests over the Internet to the application to verify that it’s reachable, available, and functional

> CloudWatch alarms can be configured for the health checks to send notification when a resource becomes unavailable.
> can be configured to route Internet traffic away from resources that are unavailable

=======================================
############ Record type ##############

# A (Address) 
- is an IPv4 address in dotted decimal notation for e.g. 192.0.2.1

## AAAA Format
- is an IPv6 address in colon-separated hexadecimal format

## CNAME (Canonical Name) 
- is the same format as a domain name

> DNS protocol does not allow creation of a CNAME record for the top node of a DNS namespace, also known as the zone apex 
- EXAMPLE: the DNS name example.com registration, the zone apex is example.com, a CNAME record for example.com cannot be created, but CNAME records can be created for www.example.com, newproduct.example.com etc.

> If a CNAME record is created for a subdomain, any other resource record sets for that subdomain cannot be created 
- EXAMPLE: if a CNAME created for www.example.com, not other resource record sets for which the value of the Name field is www.example.com can be created


## MX (Mail Xchange) Format
> contains a decimal number that represents the priority of the MX record, and the domain name of an email server

## NS (Name Server) Format
> An NS record identifies the name servers for the hosted zone. The value for an NS record is the domain name of a name server.

## PTR Format
> A PTR record Value element is the same format as a domain name.

## SOA (Start of Authority) Format
SOA record provides information about a domain and the corresponding Amazon Route 53 hosted zone

## SPF (Sender Policy Framework) Format
> SPF records were formerly used to verify the identity of the sender of email messages, however is not recommended
- Instead of an SPF record, a TXT record that contains the applicable value is recommended

## SRV Format
> An SRV record Value element consists of four space-separated values.
- The first three values are decimal numbers representing priority, weight, and port. The fourth value is a domain name 
- EXAMPLE: 10 5 80 hostname.example.com

## TXT (Text) Format
> A TXT record contains a space-separated list of double-quoted strings. 
- A single string include a maximum of 255 characters. In addition to the characters that are permitted unescaped in domain names, space
is allowed in TXT strings

@ - mean domain name itself

=======================================
############ Record type ##############


## Difference bet CNAME and Alias Record 

> CNAME record can redirect DNS queries to any DNS record.
- EXAMPLE: we can create a CNAME record that redirect queries from "acme.example.com" to "zenith.example.com" or to "acme.example.org"
- you don't need to use route 53 as the DNS service for the domain that you are redirect queries to.

> An ALIAS RECORD can only redirect queries to selected AWS resources such as the following 
- Amazon S3 bucket 
- cloudfront distribution 
- another record in the route 53 hosted zone that you are creating the alias record in

> For example you can create an alias record named "acne.example.com" that redirect queries to an Amazon S3 bucket that is also named "acme.example.com" 
- we can also create and an "acme.example.com" alias record that redirect queries to a record named "zenith.example.com" in the "example.com" hosted zone. 

> You can't create a CNAME record that has the same name as the hosted zone b Apex zone this is true both for hosted zone for domain name and for hosted zone for subdomain
> In most configuration you can create an alias record that has the same name as the hosted zone give an exception is when you want to redirect queries from John Apex to record in the same hosted zone that has a type of c name deadliest record must have the same type as the record you are rooting to and creating a c name record for the zone Apex isn't supported even for an alias record

> Route 53 53 charges for CNAME queries

> Route 53 doesn't charges for IAS queries for a w s resources for information sea route 53 53 pricing
> Aisi name record redirect DNS queries for a record name regardless of record type such as a for
> route 53 respond to a DNS queries only when the name of the earliest recorded and the type of the earliest record match the same name and datatype in the DNS query
> Aisi name record appear as AC name record in response to dig or NS lookup queries
> An alias record appear as the record type that you are specified when you create the records such as a a for ah ah ah property is visible only in the route 53 console or in the response to a program Attic request such as an e w s c l a list resource record set command

=======================================
## ROUTE53
Choosing a Routing Policy
• When you create a record, you choose a routing policy, which determines how Amazon Route 53 responds to queries:

1. Simple routing policy – Default –
> Use for a single resource that performs a given function for your domain,
> Use case: a web server that serves content for the dolfined.com website.

2. Failover routing policy –
> Use when you want to configure active-passive failover.

3. Geolocation routing policy -
> Use when you want to route traffic based on the location of your users.

4. Latency routing policy -
> Use when you have resources in multiple locations and you want to route traffic to the
resource that provides the best latency.

5. Weighted routing policy -
> Use to route traffic to multiple resources in proportions that you specify.

> Geoproximity routing policy (Requires Route Flow) –
- Use when you want to route traffic based on the location of your resources and, optionally, shift traffic from resources in one location to resources in another.

> Multivalue answer routing policy -
Use when you want Route 53 to respond to DNS queries with up to eight healthy records selected at random.

## ROUTE53 – Failover Routing
Failover Routing
> Failover routing lets you route traffic to a resource when the resource is healthy
- If the main resource is not healthy, then route traffic to a different resource
- The primary and secondary records can route traffic to anything from an Amazon S3 bucket that is configured as a website to a complex tree of records.

## ROUTE53 – Geolocation Routing
> Geolocation routing lets you choose the resources that serve your traffic based on the geographic location of your users, i.e the location that DNS queries originate from.

> For example, you may have presence in USA and Europe and want users in the US to be served in the US, and those in Europe to be served by servers in Europe.

> Use cases and benefits for using geolocation routing,
- You can localize your content and present some or all of your website in the language of your users.
- You can also use geolocation routing to restrict distribution of content to only the locations in which you have distribution rights.
- Another possible use is for balancing load across endpoints in a predictable, easy-to-manage way, so that each user location is consistently routed to the same endpoint.

## ROUTE53 – Geolocation Routing
> You can specify geographic locations by continent, by country, or by state in the United States.
> If you create separate records for overlapping geographic regions-for example, one record for North America and one for Canada-priority goes to the smallest geographic region.
- This allows you to route some queries for a continent to one resource and to route queries for selected countries on that continent to a different resource.
- Geolocation works by mapping IP addresses to locations. However, some IP addresses aren't mapped to geographic locations, DOLFINe

• For those IP addresses, even if you create geolocation records that cover all seven continents, Amazon Route 53 will receive some DNS queries from locations that it can't identify.

You can create a default record that handles both queries from IP addresses that aren't mapped to any location and queries that come from locations that you haven't created geolocation records for.

If you don't create a default record, Route 53 returns a "no answer" response for queries from those locations.

## ROUTE53 – Latency Based Routing
> If your application is hosted in multiple Amazon EC2 regions, you can improve performance for your users by serving their requests from the Amazon EC2 region that provides the lowest latency.

> To use latency-based routing, you create latency records.for your resources in multiple EC2 Regions.

> When Amazon Route 53 receives a DNS query for your domain or subdomain,
- It determines which Amazon EC2 regions you've created latency records for,
- Determines which region gives the user the lowest latency,
- Then selects a latency record for that region,
- Route 53 responds with the value from the selected record, such as the IP address for a web server.

## ROUTE53 – Latency Based Routing
> For example, suppose you have ELB load balancers in the US West (Oregon) Region and in the Asia Pacific (Singapore) Region.
- You created a latency record for each load balancer.
- Here's what happens when a user in London enters the name of your domain in a browser:
- DNS routes the request to a Route 53 name server.
- Route 53 refers to its data on latency between London and the Singapore region and between London and the Oregon region.
- If latency is lower between the London query with the IP address for the Oregon loadbalancer.
- If latency is lower between London and the Singapore region, Route 53 responds with the IP address for the Singapore load balancer Singapore.

## ROUTE53 – Latency Based Routing
> Latency between hosts on the internet can change over time as a result of changes in network connectivity and routing.

> Latency-based routing is based on latency measurements performed over a period of time, and the measurements reflect these changes.

## ROUTE53 – Weighted Routing
> Weighted routing lets you associate multiple resources with a single domain name , or subdomain name, and choose how much traffic is routed to each resource.

> This can be useful for a variety of purposes, including load balancing and testing new versions of software.

> To configure weighted routing, you create records that have the same name and type for each of your resources.

> You assign each record a relative weight that corresponds with how much traffic you want to send to each resource.

> Amazon Route 53 sends traffic to a resource based on the eight that you assign to the record as a proportion of the total weight for all records in the group:
- Weight of the specified Record / Sum of the weight of all records

Example,
> If you want to send a tiny portion of your traffic to one resource and the rest to another resource, you might specify weights of 1 and 255.


> The resource with a weight of 1gets 1/256th of the traffic (1/1+255),
The other resource gets 255/256ths (255/1+255).

> You can gradually change the balance by changing the weights. If you want to stop sending traffic to a resource, you can change the weight for that record to 0
