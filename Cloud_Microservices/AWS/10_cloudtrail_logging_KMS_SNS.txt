=======================================
############## CLOUDFRONT ############# v3


Cloudfront is a global (not regional) service.
It is used Ingress (injection proxy ) to upload objects
- and egress to distribute content
Amazon Cloudfront is a web service that speeds up distribution of your static and dynamic web
content, such as „html, .css, .js, and image files, to your users.
Cloudfront delivers your content through a
network of data centers called edge locations.
When a user requests content that you're serving with Cloudfront, the user is routed (via DNS
resolution) to the edge location that provides the lowest latency, so that content is delivered with the
best possible performance.
[12:20 AM, 1/27/2020] Manish Agrawal: Cloudfront – Faster Response to Client requests
If the content is already in the edge location with the lowest latency, CloudFront delivers it
immediately.
- This dramatically reduces the number of networks that your users' requests must pass through,
which improves performance.
If not, CloudFront retrieves it from an Amazon S3 bucket or an HTTP/web server that you have
identified as the source for the definitive version of your content (Origin Server).
DOLFING
CloudFront also keeps persistent connections with origin servers so files are fetched from the origins
as quickly as possible.
[12:20 AM, 1/27/2020] Manish Agrawal: Cloudfront Distribution
You create a CloudFront distribution (this a CDN) to instruct CloudFront where you want content to
be delivered from, and the details about how to track and manage content delivery.
Then CloudFront uses edge servers that are close to your viewers (through DNS resolution) to
deliver that content quickly when someone wants to see it or use it.
When CloudFront gets a request for your files/objects, it goes to the origin to get the requested
files that it distributes at edge locations.OLFINe
You can use any combination of Amazon S3 buckets and HTTP servers as your origin servers.
[12:20 AM, 1/27/2020] Manish Agrawal: CloudFront Use Cases
Customize user
Accelerate websites
experience
Customer use
cases
Stream live and
on-demand media
Secure content
[12:21 AM, 1/27/2020] Manish Agrawal: Accessing Cloudfront - Configuration
You can access Amazon CloudFront in the following ways:
AWS Management Console -
AWS SDKS – If you're using a programming language that AWS provides an SDK for, you can
use an SDK to access CloudFront. SDKS simplify authentication, integrate easily with your
development environment, and provide access to CloudFront commands.
Cloudfront API – If you're using a programming language that an SDK isn't available for, see
for information about API actions and about how to
the
make API requests.
AWS Command Line Interface
AWS Tools for Windows PowerShell
=======================================
#######  ####### v4

[12:26 AM, 1/27/2020] Manish Agrawal: CloudFront – Edge Locations
• Edge locations are not tied
to Availability Zones, or
Regions.
Amazon Cloudfront has
116 Points_ of Presence Bes
(105 Edge Locations and
11 Regional Edge Caches)
in 56 cities across 24.
countries. Whereas current
number of AZs is 54 only.
[12:26 AM, 1/27/2020] Manish Agrawal: CloudFront- Regional Edge Cache
Amazon CloudFront has added several regional edge cache locations globally, at close
proximity to your viewers.
They are located between your origin webserver and the global edge locations that
serve content directly to your viewers.
As objects become less popular, individual edge locations may remove those objects to
make room for more popular content.
Regional Edge Caches have a larger cache width than any individual edge location, so
objects remain in the cache longer at the nearest regional edge caches.
Regional edge cache locations are currently used only for requests that need to go back to a
custom origin; i.e. requests to S3 origins will skip regional edge cache locations.
[12:26 AM, 1/27/2020] Manish Agrawal: CloudFront Regional Edge Cache – How it works
When a viewer makes a request on your website or through your application, DNS routes
the request to the CloudFront edge location that can best serve the user's request.
This location is typically the nearest CloudFront edge location in terms of latency.
In the edge location, CloudFront checks its cache for the requested files.
If the files are in the cache, CloudFront returns them to the user.
- If the files are not in the cache, the edge servers go to the nearest regional edge cache
to fetch the object.
[12:27 AM, 1/27/2020] Manish Agrawal: CloudFront Regional Edge Cache
Regional edge caches have feature parity with edge locations. For example, a cache
invalidation request removes an object from both edge caches and regional edge caches
before it expires.
- The next time a viewer requests the object, CloudFront returns to the origin to fetch
the latest version of the object.
Proxy methods PUT/POȘT/PATCH/OPTIONS/DELETE go directly to the origin from the edge
locations and do not proxy through the Regional Edge Caches.
Regional edge caches are used for custom origins, but not Amazon S3 origins.
Dynamic content, as determined at request time (cache-behavior configured to forward all
headers), does not flow through regional edge caches, but goes directly to the origin.
=======================================
#######  #######
=======================================
#######  #######