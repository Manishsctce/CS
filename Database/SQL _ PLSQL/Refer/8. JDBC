
JDBC Driver is a software component that enables java application to interact with the database.
There are 4 types of JDBC drivers:
1. JDBC-ODBC bridge driver
2. Native-API driver (partially java driver)
3. Network Protocol driver (fully java driver)
4. Thin driver (fully java driver)


There are 5 steps to connect any java application with the database in java using JDBC. 
They are as follows:
1. Register the driver class - Class.forName("oracle.jdbc.driver.OracleDriver");  

2. Creating connection - 
Connection con=DriverManager.getConnection(  
"jdbc:oracle:thin:@localhost:1521:xe","system","password");  

3. Creating statement - 
Statement stmt=con.createStatement();  

4. Executing queries
ResultSet rs=stmt.executeQuery("select * from emp");  

5. Closing connection
con.close();  
-----------------------------------
C. STATEMENT INTERFACE
> JDBC Statement, CallableStatement, and PreparedStatement interfaces define the methods and properties that enable you to send SQL or PL/SQL commands and receive data from your database.

1. Statement - Use for general-purpose access to your database. Useful when you are using static SQL statements at runtime. The Statement interface cannot accept parameters.

2. PreparedStatement - Use when you plan to use the SQL statements many times. The PreparedStatement interface accepts input parameters at runtime.
> PreparedStatement interface extends the Statement interface 
Ex - 
   String SQL = "Update Employees SET age = ? WHERE id = ?";
   pstmt = conn.prepareStatement(SQL);

3. CallableStatement - Use when you want to access database stored procedures. The CallableStatement interface can also accept runtime input parameters.
> cstmt = conn.prepareCall (SQL);
-------------------------
> The Statement interface provides methods to execute queries with the database. 
> The statement interface is a factory of ResultSet i.e. it provides factory method to get the object of ResultSet.

The important methods of Statement interface are as follows:

1) public ResultSet executeQuery(String sql): is used to execute SELECT query. It returns the object of ResultSet.
2) public int executeUpdate(String sql): is used to execute specified query, it may be create, drop, insert, update, delete etc.
3) public boolean execute(String sql): is used to execute queries that may return multiple results.
4) public int[] executeBatch(): is used to execute batch of commands.
------------------------------