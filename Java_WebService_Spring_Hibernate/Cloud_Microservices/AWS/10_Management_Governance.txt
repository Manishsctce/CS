=======================================
###### Management & Governance ########

## CloudTrail
## CloudWatch
## CloudFormation
## Trusted Advisor 
## AWS Config
## AWS OpsWorks
## AWS Organizations
## AWS Service Catalog
## AWS RESOURCE ACCESS MANAGER (RAM)
###### AWS Systems Manager(SM) ########
## AWS Control Tower
=======================================
############## CLOUDTRAIL #############
> It is an AWS service that HELPS TO ENABLE GOVERNANCE, compliance, and operational and risk AUDITING of AWS account. 
> Actions taken by a user, role, or an AWS service are recorded as events in CloudTrail. 
- Events include actions taken in the Console, AWS CLI, SDKs and APIs.

> we can use CloudTrail to view, search, download, archive, analyze, and respond to account activity across AWS infrastructure

>> we can IDENTIFY WHO IS TAKING WHAT ACTION. 

> we can easily VIEW EVENTS IN THE CLOUDTRAIL CONSOLE BY GOING TO EVENT HISTORY.
- Event history allows you to view, search, and download the PAST 90 DAYS OF ACTIVITY 

> RECORED INFORMATION INCLUDES 
- identity of the API caller
- time of the API caller
- source IP address of the API caller
- request parameters 
- response element returned by AWS service.


Console/CLI/SDK --> AWS resources --> AWS CloudTrail 
--> save in S3 bucket 
--> do troubleshooting
--> configure CloudWatch for monitor/alarm/react.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
###### 2 TYPES OF TRAILS ######

1. A trail that applies to all regions(recommended)
2. A trail that applies to one region

> For both types of trails, we can specify S3 bucket from any region.

#### 1. TRAIL THAT APPLIES TO ALL REGIONS ###
> create a trail that applies to all regions
> CloudTrail records events in each region and delivers the CloudTrail event log files to an S3 bucket that we specify. 

>> If a region is added after creating trail then new region will automatically included

### 2. TRAIL THAT APPLIES TO ONE REGION
>> If you create additional single trails, we can have those trails deliver CloudTrail event log files to the same S3 bucket or to separate buckets.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> BY DEFAULT, CLOUDTRAIL EVENT LOG FILES ARE ENCRYPTED USING S3-SSE but we can choose to encrypt with AWS KMS key. 
- store log files in bucket as long as we want. 
- we can define S3 lifecycle rules to archive or delete log files automatically.

## CloudTrail log file integrity validation
>> To determine whether a log file was modified, deleted, or unchanged after CloudTrail delivered it, we can use CloudTrail log file integrity validation. 
- This feature is built using industry standard algorithms: SHA-256 for hashing and SHA-256 with RSA for digital signing.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What Are Trails?

> A trail is a configuration that enables delivery of CloudTrail events to S3 bucket, CloudWatch Logs, and CloudWatch Events. 
- we can use a trail to filter the CloudTrail events we want delivered, encrypt CloudTrail event log files with an AWS KMS key, and set up SNS notifications for log file delivery. 

=======================================
############# CLOUDWATCH ##############

> It is a service USED TO MONITOR AWS resources and app IN REAL TIME. 
> we can choose to create dashboard to display the metrics of app.
> CLOUDWATCH SERVICE IS REGION WISE. 

> By Default, no logs from EC2 instance will go to CloudWatch, for that we need cloudWatch Logs Agent.
- CloudWatch Logs agent provides an automated way to send log data to CloudWatch from EC2 instances
- CloudWatch Logs agent can be setup on-premise too.

> CloudWatch Logs agent is comprised of the following components:
- A plug-in to the AWS CLI that pushes log data to CloudWatch Logs.
- A script (daemon) that initiates the process to push data to CloudWatch Logs.
- A cron job that ensures that the daemon is always running.

##### FEATURE
> Alarm - use to set alarm that notify when thresholds are hit. 
> CloudWatch Events : use to send system events from AWS resources to AWS Lambda func, SNS topics, stream in Kinesis and other target types. 
> CloudWatch Logs : use to monitor, store and access log files from EC2 instance, cloudTrail.

> Billing Alarm : setup billing alerts if require
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> Using Cloudwatch logs collect, store, view, and search logs from AWS and non-AWS resources.

> CloudWatch alarms are used to trigger notifications for any metric. 
- Alarms can go to auto-scaling, EC2 actions(stop, terminate, recover, or reboot) and SNS notifications.

> Memory Usage is a metric not available by default in CloudWatch. 
- You need to add a custom metric for it to work.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Difference bet CloudWatch and CloudTrail

> CloudWatch - used for performance monitoring
- CloudTrail - used for Auditing

> CloudWatch - log events across AWS services - think operation
- CloudTrail - log API activity across AWS services - think activity

> CloudWatch - higher level monitoring and eventing
- CloudTrail - granular level

> CloudWatch - log from multiple accounts
- CloudTrail - log from multiple accounts

> CloudWatch - keeps logs indefinitely by default.
- CloudTrail - logs stored to S3 or cloudWatch indefinitely

> CloudTrail logs can be sent to CloudWatch Logs for real-time monitoring
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

> If there is need to monitor data on multi-platform then 
- there is a multi-platform CloudWatch agent which can be installed on both Linux and Windows-based instances. 
- You can use a single agent to collect both system metrics and log files from Amazon EC2 instances and on-premises servers. 
- This agent supports both Windows Server and Linux and enables you to select the metrics to be collected, including sub-resource metrics such as per-CPU core.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
######### USE CASE ############
> set up a CloudWatch Events rule that runs an Amazon ECS task whenever a file is uploaded to a certain Amazon S3 bucket using the Amazon S3 PUT operation. 


=======================================
########### CLOUDFORMATION ############

> It provides users with a simple way to create and manage a collection of AWS resources by provisioning and updating them in a predictable way

> It is a service that allows us to manage, configure and provision AWS infrastructure as a Code (IAAC)

> Resources are defined using CloudFormation template
- CloudFormation interprets the template and make API calls to create resource 

> It support YAML or JSON

> AWS CloudFormation template consists of 9 main objects:
1. Format version
2. Description
3. Metadata
4. Parameters
5. Mappings

6. Conditions 
- Any resources with true condition are created, and invalid conditions are ignored automatically. 

7. Transform
8. Resources: 
- Using this section, you can declare the AWS resource that you want to create and specify in the stack, such as an Amazon S3 bucket or AWS Lambda.

9. Output 

>> AWS CloudFormation DRIFT DETECTION can be used to detect changes made to AWS resources outside the CloudFormation Templates.
- It only checks property values that are explicitly set by stack templates or by specifying template parameters. 
- It does not determine drift for property values that are set by default. 
- To determine drift for these resources, you can explicitly set property values which can be the same as that of the default value.
=======================================
########## Trusted Advisor ############

> It is an online tool that PROVIDES REAL TIME GUIDANCE to help provision resources for AWS best practices in below 5 category:

cost optimization
Performance
Security
Fault tolerance
Service limit

=======================================
############# AWS Config ##############

> AWS Config is a service that enables you to ASSESS, AUDIT, AND EVALUATE THE CONFIGURATIONS OF AWS RESOURCES.
- it continuously monitors and records AWS resource configurations
- it allows us to automate the evaluation of recorded configurations against desired configurations.
- using it we can review changes in configurations and relationships between AWS resources, dive into detailed resource configuration histories, and determine overall compliance against the configurations specified in internal guidelines.
- This enables you to simplify compliance auditing, security analysis, change management, and operational troubleshooting

> we can utilize AWS Config to check for compliance on the password policy by configuring the Config rule to check the IAM_PASSWORD_POLICY on an account. 
- Additionally, because Config integrates with AWS Organizations, we can improve the set up to aggregate compliance information across accounts to a central dashboard.

With AWS Config, you can do the following:
> Evaluate your AWS resource configurations for desired settings. 
- GET A SNAPSHOT OF THE CURRENT CONFIGURATIONS of the supported resources that are associated with your AWS account. 
- Retrieve configurations of one or more resources that exist in your account. 
- Retrieve historical configurations of one or more resources. 
- Receive a notification whenever a resource is created, modified or deleted. 
- VIEW RELATIONSHIPS BETWEEN RESOURCES. 
- For example, you might want to find all resources that use a particular security group. 

=======================================
########### AWS OpsWorks ##############
> It is a configuration management service that uses Chef, an automation platform that treats server configurations as code. 
- OpsWorks uses Chef to automate how servers are configured, deployed, and managed across your Amazon EC2 instances or on-premise compute environments.


> OPSWORKS WORKS BASED ON STACKS AND LAYERS 
- With OpsWorks Stacks, we can model our application as a stack containing different layers, such as load balancing, database, and application server.
- we can deploy and configure Amazon EC2 instances in each layer or connect other resources such as Amazon RDS databases. 

> OpsWorks is useful when there is a need to have different stacks for the Development and Production environments
=======================================

=======================================
######### AWS ORGANIZATIONS ###########

> It is an account management service that lets you CONSOLIDATE MULTIPLE AWS ACCOUNTS INTO AN ORGANIZATION. 
- you can create member accounts and invite existing accounts to join organization. 
- You can organize those accounts into groups and attach policy-based controls.
- It helps to CENTRALLY MANAGE BILLING; CONTROL ACCESS, COMPLIANCE, AND SECURITY; AND SHARE RESOURCES across the AWS accounts.
- it enables us to centrally manage policies across multiple accounts, without requiring custom scripts and manual processes.
- It is available to all AWS customers at no additional charge.

> Use Consolidated billing feature in AWS organization TO GET VOLUME DISCOUNTS on Amazon EC2
- it is available to all AWS customers at no additional charge

> Consolidate Billing combines the usage of all Accounts within an organization & shares RI between multiple accounts. 
- This discount is valid only if the account which has purchased RI is not using its all Instances & other accounts have launched Instance in SAME AZ as that of the account which has purchased this Instance. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
####### CORE CONCEPT ##########

> AWS Organization 
– An organization is a collection of AWS accounts that you can ORGANIZE INTO A HIERARCHY AND MANAGE CENTRALLY.

> AWS Account – It is a container for your AWS resources.

> Master Account – It is the AWS account you use to create your organization.

> Member Account 
– It is an AWS account, other than the master account, that is part of an organization.

> Administrative Root 
– An administrative root is the starting point for organizing your AWS accounts. The administrative root is the top-most container in your organization’s hierarchy.

> Organizational Unit (OU) 
– It is a group of AWS accounts within an organization. 
- An OU can also contain other OUs enabling you to create a hierarchy.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
=======================================
##### AWS RESOURCE ACCESS MANAGER (RAM)

> It is a service that enables you to EASILY AND SECURELY SHARE AWS RESOURCES WITH ANY AWS ACCOUNT or within your AWS Organization. 
- You can share AWS Transit Gateways, Subnets, AWS License Manager configurations, and Route53 Resolver rules resources with RAM.
- Many organizations use multiple accounts to create administrative or billing isolation, and limit the impact of errors. 
- RAM eliminates the need to create duplicate resources in multiple accounts, reducing the operational overhead of managing those resources in every single account you own. 
- You can create resources centrally in a multi-account environment, and use RAM to share those resources across accounts in three simple steps: create a Resource Share, specify resources, and specify accounts.
 
> RAM is available to you at NO ADDITIONAL CHARGE.
- You can procure AWS resources centrally, and use RAM to share resources such as subnets or License Manager configurations with other accounts. 
- This eliminates the need to provision duplicate resources in every account in a multi-account environment, reducing the operational overhead of managing those resources in every account.

=======================================
###### AWS Systems Manager(SM) ########
> It is also know as Simple Systems Manager(SSM)

> it provides a CENTRAL PLACE TO VIEW AND MANAGE AWS RESOURCES, so you can have complete visibility and control over your operations.
- It allows you to centralize operational data from multiple AWS services and automate tasks across AWS resources.
- basically we can administer our instances like run commands/ upload patches etc using SM

> AWS Systems Manager Run Command lets you remotely and securely manage the configuration of your managed instances. 
- A managed instance is any EC2 instance or on-premises machine in your hybrid environment that has been configured for Systems Manager. 

> RUN COMMAND enables you to automate common administrative tasks and perform ad-hoc configuration changes at scale. 
- You can use Run Command from the AWS console, the AWS CLI, AWS Tools for Windows PowerShell, or the AWS SDKs. 
- Run Command is offered at no additional cost.

> For managing instance using Systems Manager 
1. Need IAM role - AmazonEC2RoleforSSM
2. Install SSM agent on EC2 instance

> To Run command, we can manually select no. of instances or filter based on tag
- we can write/store the output in S3 bucket
=======================================
######## AWS Secrets Manager ##########
> It is an AWS service that makes it easier for you to manage secrets. 
- Secrets can be database credentials, passwords, third-party API keys, and even arbitrary text. 
- You can store and control access to these secrets centrally by using SM console, SM CLI, or SM API and SDKs.

> SM enables you to replace hardcoded credentials in your code (including passwords), with an API call to SM to retrieve the secret programmatically.
- This helps ensure that the secret can't be compromised by someone examining your code, because the secret simply isn't there. 
- Also, you can configure SM to automatically rotate the secret for you according to a schedule that you specify. 
- This enables you to replace long-term secrets with short-term ones, which helps to significantly reduce the risk of compromise.
=======================================