=======================================
############# AWS LAMBDA ##############

## What is AWS Lambda?

> it is a compute service where we can upload our code and create the Lambda function.
- it takes care of provisioning and managing the servers used to run the code.
- While using Lambda, we don't have to worry about scaling, patching, OS etc.
- it runs code on a HA compute infrastructure.

> Lambda function can trigger other Lambda event
> While working with Lambda function, if there is a need to access other resources, ensure that IAM role is in place. 

> it executes code only when needed and scales automatically, from a few requests per day to thousands of RPS.
> pay only for the compute time - No charge when code is not running.


> use the API gateway and integrate with AWS Lambda func which will call on HTTPS

#### USE-CASE ####

> It can be used as an event-driven compute service where AWS Lambda runs our code in response to events. 
- These events could be changes to data in S3 bucket OR DynamoDB table.

> It can be used as a compute service to run our code in response to HTTP requests using Amazon API calls made using AWS SDKs.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is the benefit of Lambda?

1.  No Servers 
- we do not need to run our own server, Lambda will do everything for us. We just need to focus on our code.

2. Continuous scaling: 
- Lambda will automatically scale up or scale out.

3. Super super super cheap: 
- It is very cheap as you do not require a server.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## AWS Lambda - Triggers

You can use AWS Lambda to run your code in response to:
- Events such as changes to data in an Amazon S3 bucket or an Amazon
DynamoDB table.
- To run your code in response to HTTP/HTTPS requests using Amazon
API gateways.
- Invoke your code using API calls made using AWS SDKS.

## AWS Lambda - Trigger
• The user creates an object in S3 bucket.
• Amazon S3 detects the object created event.
• Amazon S3 invokes your lambda function
using the permission provided by execution
role.
Amazon S3 knows which lambda function to
invoke based on the event source mapping that
the
bucket
is stored in
configuration.
notification

## AWS Lambda – Building Blocks
• Lambda Function
- The foundation, it is compromised of your custom code.
• Event Source
- An AWS Service, such as an Amazon SNS, or a custom service that triggers
your functions and executes its logic.
• Downstream resources
- An AWS service, such as DynamoDB tables or Amazon S3 bucket, that your
lambda function calls once it is triggered.
• Log Streams
- While Lambda automatically monitors your function invocations and report
metrics to cloudwatch, you can annotate your function code with custom logging
statement that allow you to analyze the performance of you lambda function to
ensure its working properly.

## AWS Lambda Function Configurations
• You only specify the amount of memory you want to allocate for your
lambda function.
• You can update the configuration and request additional memory in 64
MB increments from 128MB to 3008MB.
• To prevent your lambda function from running indefinitely, you specify a
timeout.
When the specified timeout is reached, AWS lambda terminates your
Lambda function.
• Maximum execution time of function is 300 Seconds and default is 3
seconds *

## AWS Lambda Function Configurations
• You can also setup AWS Lambda to invoke your code on regular,
scheduled basis using the AWS Lambda console.
• You can specify a fixed rate (number of hours, days or weeks) or you can
specify a cron expression.

## AWS Event Source Mapping
In AWS Lambda, Lambda Functions and event sources are the core
components in AWS Lambda.
• An event source is the entity that publishes events, and a lambda
function is the custom code that process the events.
• Event source mapping basically maps an event source to a lambda
function.
• Each event source mapping identifies the type of events to publish and
the lambda function to invoke when event occurs.
• The specific lambda function then receives the event information as a
parameter, your lambda function code can then process the event.

> AWS Lambda is the FaaS (function as a service). 
- It has integrations with many other AWS services, including AWS DynamoDB and AWS API gateway. 
- Due to its popularity and support for multiple languages, AWS Lambda is a safe move for going serverless.