## Identity Access and Management (IAM)
## AWS Inspector
## AWS Certificate Manager
## AWS Directory Service (DS)
## AWS Web Application Firewall (WAF)
## AWS Shield
## AWS Single-Sign-on (SSO)
## AWS Cognito
## KMS 
## AWS CloudHSM 
=======================================
############### IAM ###################


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## You are deploying an application on Amazon EC2 that must call AWS APIs. Which method would you use to securely pass the credentials to the application?

A. Pass API credentials to the instance using Instance userdata.
B. Store API credentials as an object in Amazon S3.
C. Embed the API credentials into your application.
D. Assign IAM roles to the EC2 Instances.


ANSWER : D

EXPLANATION : 
You can use roles to delegate access to users, applications, or services that don't normally have access to your AWS resources. It is not a good practice to use IAM credentials for a production-based application. However, it is a good practice to use IAM Roles.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
### AWS best practices recommends that you do not use the root account user to do the day to day stuff. Instead you create other user and give it full administrative access, except for account information, which can be done by assigning the user one of the prebuilt AWS access policies.
What is the name of the access policy referenced above?

A. Read Only Access
B. Power User Access
C. AWS Cloud Formation Read Only Access
D. Administrator Access


Answer : d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## When you create an IAM user, what permissions would that user be given as soon as it is newly created?

A. Full administrative access permissions
B. Root account similar permissions
C. No permissions
D. Read only access permission to all AWS services.


Answer : c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Which of the below AWS authentication mechanisms can be used to control access to AWS APIs? Choose 3 answers

a. Key pairs
b. Console passwords
C. Access keys
d. Signing certificates
e. Security Group memberships


Answer : b, c, d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
### Your organization has implemented an AWS environment and created hundreds of IAM account for all users that require access. A newly appointed Chief Security Officer has requested changes to the access policy granted to these users. You are puzzles as to what will be the easiest way to implement the changes to these users quickly and effectively, and also to account for potential future changes required for their IAM access policies?

A. Use the IAM groups and add users to different groups based on group classification and apply policies at the group level
B. You have to do it at the individual user level, there is not easier way to do it
C. Delete all IAM users and establish a federation Infrastructure and use the corporate's directory to authenticate the users and provide them access
D. Use the IAM role and implement access at the role level


Answer : A
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Your organization is establishing an IAM access policy to create IAM users for those employees that require access to the newly deployed AWS VPC-based environment. Part of the access security policy for these users requires some of them to have the right to change their access password and access keys, while the others can not change either one, and they need to request admin help to do that.
How can you achieve this?

A. Under the IAM password policy screen, disable the option for all users to change their own passwords, and use an IAM policy to grant permissions to only some users to change their own passwords and their own access keys,

B. You can choose this as you create each user
C. By default each IAM user can modify their passwords
D. Root account owner can set the policy from the IAM console under the password policy screen


Answer : a 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## You are the AWS SME at YCDIT2, and your junior SysOps administrator is unsure how to configure the password policy for the IAM users, such that they can change their console access passwords, but can not change their access keys. What of the below would be a correct statement you can share with her to achieve this effectively and with the minimum involved effort?

A. Using the root account credentials, set the password policy option for the users to be able to change their passwords, in the IAM console, under the password policy screen.
B. Create an IAM policy to grant theusers permissions to change their passwords, and attach to the users
C. This can not be done in IAM, administrator role or account root only can change the passwords
D. Once set, passwords can not change in IAM, you must delete the users and create them again with the new passwords


Answer : a 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## You have a security requirement to enforce frequently rotated passwords and one time access credentials for a group of your organization's IAM users with higher privileges on AWS.
How can you achieve this do this? (Choose 2)

A. Enable MFA authentication for this group of users
B. Attach an IAM policy to these users which will enforce frequently rotated passwords
C. Use AWS's identity federation between your organization's AWS environment and corporate premises to enforce authentication and policies on all users
D. Enable the IAM single-use password policy option for privileged users


Answer : a, b
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Which of the below are AWS IAM best practices that you need to implement in your AWS environment ? (Choose 3)

A. Always create IAM user accounts for every user
B. Use the AWS account(root) for regular user activities
C. Assign least privilege permissions to your IAM users and IAM groups
D. Configure MFA on the root account and for privileged IAM users
E. Assign passwords and access keys to all users, and ensure they are frequently rotating them
F. Rotate passwords regularly


Answer : c, d, f
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## You client has an AWS environment hosted in US East 1 region. In a recent client meeting, they shared their plan to expand into the AWS Singapore region which they have not used yet. The client IT director was wondering what would it take to re-create or copy all the IAM Roles, Policies in use in their US East 1 to the AWS region in Singapore. What would you suggest to the client?

A. They need to re-create everything again in AWS Singapore region
B. They can copy the IAM roles and policies to the new region
C. They can re-use the existing IAM roles and policies since IAM entities are global in AWS
D. Configure VPC peering between the two AWS VPCs in the two regions such that the new environment in Singapore can route back to the existing one in US East 1


Answer : c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Your junior AWS administrator is trying to understand which of the below activities require AWS IAM credentials and which do not.
What would your answer be? (Choose 4)

A. Creating task definitions in an ECS cluster for different applications with different permissions on the same ECS instances
B. Uploading files to an S3 bucket in your account 
C. Remote SSH access to the EC2 instances in your VPC
D. Launding a DynamoDB table
E. Adding an EC2 Instance to an existing ECS cluster
F. Log in to your website hosted on EC2 fleet of instances

Answer : a, b, d, e

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
### Third-party sign-in (Federation) has been implemented in your web application to allow users who need access to AWS resources. Users have been successfully logging in using Google, Facebook, and other third-party credentials. Suddenly, their access to some AWS resources has been restricted. What is the most likely cause of the restricted use of AWS resources? [WL228]

A. IAM policies for resources were changed, thereby restricting access to AWS resources
B. Federation protocols are used to authorize services and need to be updated
C. AWS changed the services allowed to be accessed via federated login
D. The identity providers no longer allow access to AWS services


ANSWER : A

EXPLANATION: 
Option A is correct. When IAM policies are changed, they can impact the user experience and services they can connect to.

Option B is incorrect. Federation is used to authenticate users, not to authorize services.

Option C is incorrect. Federation is used to authenticate users, not to authorize services.
Option D is incorrect. The identity providers don’t have the capability to authorize services; they authenticate users.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##41: You have a requirement to integrate the Lightweight Directory Access Protocol (LDAP) directory service of your on-premises data center to your AWS VPC using IAM. The identity store which is currently being used is not compatible with SAML.   
Which of the following provides the most valid approach to implement the integration? [UD441]

A. Use AWS Single Sign-On (SSO) service to enable single sign-on between AWS and your LDAP.
B. Use IAM roles to rotate the IAM credentials whenever LDAP credentials are updated.
C. Develop an on-premises custom identity broker application and use STS to issue short-lived AWS credentials.
D. Use an IAM policy that references the LDAP identifiers and AWS credentials.


EXPLANATION : IAM
ANSWER : C

If your identity store is not compatible with SAML 2.0, then you can build a custom identity broker application to perform a similar function. The broker application authenticates users, requests temporary credentials for users from AWS, and then provides them to the user to access AWS resources.

The application verifies that employees are signed into the existing corporate network's identity and authentication system, which might use LDAP, Active Directory, or another system. The identity broker application then obtains temporary security credentials for the employees.

To get temporary security credentials, the identity broker application calls either AssumeRole or GetFederationToken to obtain temporary security credentials, depending on how you want to manage the policies for users and when the temporary credentials should expire. The call returns temporary security credentials consisting of an AWS access key ID, a secret access key, and a session token. The identity broker application makes these temporary security credentials available to the internal company application. The app can then use the temporary credentials to make calls to AWS directly. The app caches the credentials until they expire, and then requests a new set of temporary credentials.


Using an IAM policy that references the LDAP identifiers and AWS credentials is incorrect because using an IAM policy is not enough to integrate your LDAP service to IAM. You need to use SAML, STS or a custom identity broker.

Using AWS Single Sign-On (SSO) service to enable single sign-on between AWS and your LDAP is incorrect because the scenario did not require SSO and in addition, the identity store that you are using is not SAML-compatible.

Using IAM roles to rotate the IAM credentials whenever LDAP credentials are updated is incorrect because manually rotating the IAM credentials is not an optimal solution to integrate your on-premises and VPC network. You need to use SAML, STS or a custom identity broker.


References:
https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_common-scenarios_federated-users.html
https://aws.amazon.com/blogs/aws/aws-identity-and-access-management-now-with-identity-federation/
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## A Solutions Architect is designing a shared service for hosting containers from several customers on Amazon ECS. These containers will use several AWS services. A container from one customer should not be able to access data from another customer. Which solution would help the architect to meet these requirements? [WL124]
 
A. IAM roles for tasks
B. IAM roles for EC2 Instances
C. IAM Instance profile for EC2 Instances
D. Security Group rules


Explanation: IAM
Correct Answer – A

The AWS Documentation mentions the following:

With IAM roles for Amazon ECS tasks, you can specify an IAM role to be used by the containers in a task. Applications are required to sign their AWS API requests with AWS credentials, and this feature provides a strategy to manage credentials for your application's use. This is similar to how Amazon EC2 instance profiles provide credentials to EC2 instances.

For more information on configuring IAM Roles for tasks in ECS, please visit the following URL:

https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## A concern raised in your company is that developers could potentially delete production-based EC2 resources. As a Cloud Admin, which of the below options would you choose to help alleviate this concern? [WL838] Choose 2 options. 

A. Tag the production instances with production-identifying tag and add resource-level permissions to the developers with an explicit deny on the terminate API call to instances with the production tag. 

B. Create a separate AWS account and move the developers to that account. 

C. Modify the IAM policy on the production users to require MFA before deleting EC2 instances, and disable MFA access to the employee. 

D. Modify the IAM policy on the developers to require MFA before deleting EC2 instances. 


EXPLANATION:
Answer – A and B

> Creating separate AWS account for developers will help the organization to facilitate the highest level of resource and security isolation. 

The following documentation from AWS gives us a clear picture of the scenarios when we need to consider creating multiple accounts. 
When to Create Multiple Accounts
While there is no one-size-fits-all answer for how many AWS accounts a particular customer should have, most companies will want to create more than one AWS account because multiple accounts provide the highest level of resource and security isolation. Answering “yes” to any of the following questions is a good indication that you should consider creating additional AWS accounts:

Does the business require administrative isolation between workloads? 
> Administrative isolation by account provides the most straightforward approach for granting independent administrative groups different levels of administrative control over AWS resources based on the workload, development lifecycle, business unit (BU), or data sensitivity. Does the business require limited visibility and discoverability of workloads? 
Accounts provide a natural boundary for visibility and discoverability. Workloads cannot be accessed or viewed unless an administrator of the account enables access to users managed in another account. Does the business require isolation to minimize the blast radius? 
Blast-radius isolation by account provides a mechanism for limiting the impact of a critical event such as a security breach, if an AWS Region or Availability Zone becomes unavailable, account suspensions, etc. Separate accounts help define boundaries and provide natural blast-radius isolation. Does the business require strong isolation of recovery and/or auditing data? 
Businesses that are required to control access and visibility to auditing data due to regulatory requirements can isolate their recovery data and/or auditing data in an account separate from where they run their workloads (e.g., writing CloudTrail logs to a different account).  

For more information:
https://d0.awsstatic.com/aws-answers/AWS_Multi_Account_Security_Strategy.pdf
Tags enable you to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. This is useful when you have many resources of the same type — you can quickly identify a specific resource based on the tags you've assigned to it. Each tag consists of a key and an optional value, both of which you define. 
For more information on tagging AWS resources, please refer to the below URL:
http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html

The question says that the developers should not have the option to delete production based resources. So, option A and B completely keep the developers away from production resources. 

You wish to use MFA, which means developers can delete the production-based resources if they know MFA code which is not recommended. 

AWS Multi-Factor Authentication (MFA) is a simple best practice that adds an extra layer of protection on top of your user name and password. With MFA enabled, when a user signs in to an AWS website, they will be prompted for their user name and password (the first factor—what they know), as well as for an authentication code from their AWS MFA device (the second factor—what they have). Taken together, these multiple factors provide increased security for your AWS account settings and resources. 
Organizations have good control on newly created accounts rather than old aws accounts. Because they can easily monitor and maintain(few) assigned permissions on accounts and they delete those accounts once the required task will be done. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 



EXPLANATION : 
ANSWER : 



=======================================
##### AWS Directory Service (DS) ######

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## You manage the IT users for a large organization that is moving many services to AWS. You want a seamless way for your employees to log in and use cloud services. You also want to use AWS Managed Microsoft AD and have been asked if users will be able to access services in the on-premises environment. What would you respond? [WL310]

A. AWS Managed Microsoft AD requires data synchronization and replication to work properly

B. AWS Managed Microsoft AD can only be used for cloud or on-premises environments, not both

C. AWS Managed Microsoft AD can be used as the Active Directory over VPN or Direct Connect

D. AWS Managed Microsoft AD is 100% the same as Active Directory running on separate EC2 instance



EXPLANATION:
Correct Answer: C

Option C is correct. Because you want to use AWS Managed Microsoft AD, you want to be certain that your users can use the AWS cloud resources as well as services in your on-premise environment. 
In order to make your company have connectivity for AWS services, once you implement VPN or Direct Connect, your AWS Managed Microsoft AD can be used for both cloud services and on-premises services. 

Option A is incorrect. When data can be synchronized from on-premises to the cloud, it is not required. 

Option B is incorrect. AWS Managed Microsoft AD can be used for both, it’s not one or the other. 

Option D is incorrect. AWS Managed Microsoft AD. being a managed service limits some capabilities versus running Active Directory by itself on EC2 instances
  

For more information, please visit the URLs below:

https://aws.amazon.com/directoryservice/
https://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Your company authenticates users in a very disconnected network requiring each user to have several username/password combinations for different applications. You have been assigned a task of consolidating and migrating services to the cloud and reducing the number of usernames and passwords, employees need to use. What would you recommend? [WL329]

A. AWS Directory Service allows users to sign in with their existing corporate credentials – reducing the need for additional credentials.
B. Create two Active Directories – one for the cloud and one for on-premises – reducing username/password combinations to two
C. Require users to use third-party identity providers to log-in for all services
D. Build out Active Directory on EC2 instances to gain more control over user profiles


EXPLANATION:
Correct Answer: A

Option A is correct. AWS Directory Service enables your end-users to use their existing corporate credentials while accessing AWS applications. 
- Once you’ve been able to consolidate services to AWS, you won’t have to create new credentials. 
- Instead, you’ll be able to allow the users to use their existing username/password. 

Option B is incorrect. One Active Directory can be used for both on-premises and the cloud; this isn’t the best option provided. 
C. This won’t always reduce the number of username/passwords combinations. 
D. This requires more effort and additional management than using a managed service

For more information, please refer to the URLs below:

https://aws.amazon.com/directoryservice/faqs
https://aws.amazon.com/directoryservice/
https://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## You have a small company, running on Windows OS, that is only leveraging cloud resources like AWS Workspaces and AWS Workmail. You want a fully managed solution to set policies and provide user management. Which of the minimum required AWS Directory Service would you recommend? [WL334]

A. AWS Managed Microsoft AD for its full-blown AD features and capabilities
B. AD Connector to be used with on-premises applications
C. AWS Cognito for its scalability and customization
D. Simple AD for limited functionality and compatibility with desired applications


EXPLANATION:
Correct Answer: D

Option D - Simple AD for limited functionality and compatibility with desired applications is the correct answer. 
> Simple AD is a Microsoft Active Directory–compatible directory from AWS Directory Service. 
- You can use Simple AD as a standalone directory in the cloud to support Windows workloads that need basic AD features or compatible AWS applications.  
- It can also be used to support Linux workloads that need LDAP service.  

Option A is incorrect. This is more functionality and feature-rich than you need, given the desired applications
Option B is incorrect. You don’t have on-premises applications, so AD Connector is not needed. 
Option C is incorrect. This is more functionality and feature-rich than you need, given the desired applications
For more information, please check the URLs below:

https://aws.amazon.com/directoryservice/
https://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 



EXPLANATION : 
ANSWER : 


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 



EXPLANATION : 
ANSWER : 


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 



EXPLANATION : 
ANSWER : 

=======================================
## AWS WEB APPLICATION FIREWALL (WAF) #

=======================================
############# AWS Shield ##############

=======================================
###### AWS Single-Sign-on (SSO) #######

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 7:WL7: You are working as an AWS Architect for a financial company having intranet application hosted on AWS. They are using AWS SSO for granting access to users to AWS resources. During the annual security audit, Auditors have concerns on users sign-in process & prompted non-compliance for the security process when sign-in is observed from users using unknown locations or devices. Auditors are looking for enhancing security controls to be in place for such users. What would you use to improve the security process during user sign-in? 

A. Enable Context-aware two-step verification with verification code sent as SMS to the user's mobile device.
B. Enable Always-On two-step verification with verification code sent as SMS to the user's mobile device.
C. Enable Always-On two-step verification with verification code sent to the user's email address.
D. Enable Context-aware two-step verification with verification code sent to the user's email address. 


EXPLANATION: AWS SSO
Correct Answer –  D

> For additional security, AWS SSO with two-step verification can be enabled. 
- After two-step verification is enabled, post login with authorized email & password, users are prompted for additional verification code which they receive on their registered email address. 
- With Context-aware two-step verification, AWS SSO analyzes user sign-in context such as browser, location, and devices. If any deviation is observed, only then it asks for the additional second level of verification code. With this, a user does not have to perform two-step verification repeatedly from the same device. 

Option A is incorrect as Verification code is sent over the registered email address, not as an SMS on the mobile device. 
Option B is incorrect as Verification code is sent over the registered email address, not as an SMS on the mobile device. Also, with Always-on Two-step verification, each time the user logs in to any cloud application, it would prompt for two-step verification code. This is true even if the user logs in from the same device. 

Option C is incorrect. With Always-on Two-step verification, each time the user logs in to any cloud application, it would prompt for two-step verification code. This is true even if the user logs in from the same device. For more information on enabling two-step verification on AWS SSO, refer to the following URL:
https://docs.aws.amazon.com/singlesignon/latest/userguide/enable-two-step-verification.html

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 25:WL7: You are working as an AWS Architect for an enterprise customer. Users access Amazon S3 buckets to save all project-related documents and also use business applications like Office 365 for daily work activities. These applications need to be accessible from any device for a limited number of hours in the day. 
They are using AWS SSO to centrally manage and control access to AWS resources. Users are complaining that after each hour, they are getting logout from console & need to re-login. You need to ensure that the User session is optimum based upon the time required to complete the activity. Which of the following can be set to meet this requirement? 

A. Create a custom Permission Set with session duration as 24 hours
B. Use an existing Job Function policy to set session duration as 24 hours
C. Create a custom Permission Set with session duration as 6 hours
D. Use an existing Job Function policy to set session duration as 6 hours


EXPLANATION: SSO
Correct Answer –  C

> Permission sets can control time duration for user login to the AWS Console by setting session duration. 
- Default Session duration is 1 hour while the maximum can be set to 12 hours. 
- Post this session duration, the user is automatically logout. 

Option A is incorrect as maximum Session duration that can be set is 12 hours. 
Option B is incorrect. This will use predefined AWS managed policies since the requirement is for customized permission policy for session duration. Also, maximum Session duration that can be set is 12 hours. 

Option D is incorrect. This will use predefined AWS managed policies since the requirement is for customized permission policy for session duration. 

For more information on Permission Set properties in AWS SSO, refer to the following URL:
https://docs.aws.amazon.com/singlesignon/latest/userguide/howtosessionduration.html

=======================================
############ AWS Cognito ##############
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
### You have designed an application that uses AWS resources, such as S3 to operate and store users’ documents. You currently use Cognito identity pools and user pools. To increase usage and ease of signing up, you decide that adding social identity federation is the best path forward. 
How would you differentiate the Cognito identity pool and the federated identity providers (e.g. Google)? [WL216]

A. They are the same and just called different things
B. First, you sign-in via Cognito then through a federated site, like Google
C. Federated identity providers and identity pools are used to authenticate services
D. Sign-in via AWS Cognito User Pool and sign-in via AWS Cognito Identity Pool are independent of one another


ANSWER : D

EXPLANATION: 
Option D is correct. Sign-in through a third party (federation) is available in Amazon Cognito user pools. This feature is independent of the federation through Amazon Cognito identity pools (federated identities).

Option A is incorrect. Cognito identity pool and the federated identity providers are separate, independent authentication methods.
Option B is incorrect. Only one log-in event is needed, not two.
Option C is incorrect. Identity providers authenticate users, not authenticate services.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
## You are a Solutions Architect in a startup company that is releasing the first iteration of its app. Your company doesn’t have a directory service for its intended users but wants the users to be able to sign in and use the app. What would you advice to implement a solution quickly? [WL259]

A. Use AWS Cognito although it only supports social identity providers like Facebook
B. Let each user create an AWS user account to be managed via IAM
C. Invest heavily in Microsoft Active Directory as it’s the industry standard
D. Use Cognito Identity along with a User Pool to securely save users’ profile attributes


ANSWER : D

EXPLANATION: 
Option D is correct. Cognito is a managed service that can be used for this app and scale quickly as usage grows.

Option A is incorrect. Cognitio supports more than just social identity providers, including OIDC, SAML, and its own identity pools

Option B is incorrect. This isn’t an efficient means of managing user authentication.

Option C is incorrect. This isn’t the most efficient means to authenticate and save user information.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
## You have implemented AWS Cognito services to require users to sign in and sign up to your app through social identity providers like Facebook, Google, etc. Your marketing department wants users to try out the app anonymously as they think that the current log-in requirement is excessive and will reduce demand for products and services offered through the app. What would you suggest to the marketing department in this regard? [WL261]

A. It’s too much of a security risk to allow unauthenticated users access to the app
B. Cognito Identity supports guest users for the ability to enter the app and have limited access
C. A second version of the app will need to be offered for unauthenticated users
D. This is possible only if we remove the authentication from everywhere


ANSWER : b

EXPLANATION: 
Option B is correct. Amazon Cognito Identity Pools can support unauthenticated identities by providing a unique identifier and AWS credentials for users who do not authenticate with an identity provider. Unauthenticated users can be associated with a role that has limited access to resources as compared to a role for authenticated users.

Option A is incorrect. Cognito will allow unauthenticated users without being a security risk.

Option C is incorrect. Cognito supports both authenticated and unauthenticated users.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
## Your app uses AWS Cognito Identity for authentication and stores user profiles in a User Pool. To expand the availability and ease of signing in to the app, your team is requesting advice on allowing the use of OpenID Connect (OIDC) identity providers as additional means of authenticating users and saving the user profile information. What is your recommendation on OIDC identity providers? [WL262]

A. This is supported, along with social and SAML based identity providers.
B. This is not supported, only social identity providers can be integrated into User Pools
C. If you want OIDC identity providers, then you must include SAML and social-based support as well
D. It’s too much effort to add non-Cognito authenticated user information to a User Pool


ANSWER : A

EXPLANATION: 

Option A is correct. OpenID Connect (OIDC) identity providers (IdPs) (like Salesforce or Ping Identity) are supported in Cognito, along with social and SAML based identity providers. You can add an OIDC IdP to your user pool in the AWS Management Console, with the AWS CLI, or by using the user pool API method CreateIdentityProvider.

Option B is incorrect. Cognito supports more than just social identity providers, including OIDC, SAML, and its own identity pools.

Option C is incorrect. You can add any combination of federated types, you don’t have to add them all.

Option D is incorrect. While there is additional coding to develop this, the effort is most likely not too great to add the feature.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 



EXPLANATION : 
ANSWER : 



=======================================
################ KMS ##################

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
### Your recent security review revealed a large spike in attempted logins to your AWS account. With respect to sensitive data stored in encryption enabled S3, the data has not been encrypted and is susceptible to fraud if it was to be stolen. You’ve recommended AWS Key Management Service as a solution. Which of the following is true regarding the operation of KMS? [WL236]
                                         
A. Only KMS generated keys can be used to encrypt or decrypt data
B. Data is encrypted at rest
C. KMS allows all users and roles to use the keys by default
D. Data is decrypted in transit


EXPLANATION: KMS
ANSWER : B

Option B is correct. Data is encrypted at rest; data is encrypted once uploaded to S3. Encryption while in transit is handled by SSL or by using client-side encryption.

Option A is incorrect. Data can be encrypted/decrypted using AWS keys or keys provided by your company

Option C is incorrect. Users are granted permissions explicitly, not by default by KMS

Option D is incorrect. Data is not decrypted in transit (while moving to and from S3). Data is encrypted or decrypted while in S3 and then while in transit can be encrypted using SSL.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 



EXPLANATION : 
ANSWER : 

=======================================
### AWS SECURITY TOKEN SERVICE (STS) ##
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Which of the following is not a feature of AWS Security Token Service?

A. STS enables you to request temporary, limited-privilege credentials.
B. STS enables users to assume role.
C. STS generates Git Credentials for IAM users.
D. STS generates Federated Credentials for IAM users.


ANSWER : C

EXPLANATION : 
With Git credentials, you can generate a static user name and password in the Identity and Access Management (IAM) console that you can use to access AWS CodeCommit repositories from the command line, Git CLI, or any Git tool that supports HTTPS authentication.

=======================================
########### AWS CloudHSM ##############
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Your company wants to enable encryption of services such as S3 and EBS volumes so that the data it maintains is encrypted at rest. They want to have complete control over the keys ( including hardware ) and the entire lifecycle around the keys. How can you accomplish this? [WL631]

A. Use the AWS CloudHSM
B. Use the KMS service
C. Enable S3 server-side encryption
D. Enable EBS Encryption with the default KMS keys


EXPLANATION: CloudHSM
Answer – A

This is mentioned in the AWS Documentation

AWS CloudHSM is a cloud-based hardware security module (HSM) that enables you to easily generate and use your own encryption keys on the AWS Cloud. With CloudHSM, you can manage your own encryption keys using FIPS 140-2 Level 3 validated HSMs

Options B,C and D are incorrect since here the keys are maintained by AWS
 
For more information on cloud HSM, please refer to the below link
https://aws.amazon.com/cloudhsm/