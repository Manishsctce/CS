## What is Message?
> It is a piece of information. 
- It can be a text, XML document, JSON data or an Entity (Java Object) etc. 
- It is very useful data to communicate different systems.
---------------------------------------
## What is Messaging?
Messaging means exchanging information between different components in the same system or different systems. It can happen in either synchronous manner or asynchronous manner.
---------------------------------------
## What is JMS?
> JMS stands for Java Message Service. 
> JMS API is a Java API which contains common set of interfaces to implement enterprise based messaging systems. 
> It is used to implement Messaging systems in Java-based applications only, does not support other languages.

> It is used to create, send, receive and read messages or exchange messages between different systems. 
- Once we develop a Java Messaging System with JMS API, then we can deploy same application in any JMS Provider software.
---------------------------------------
###### JMS Architecture ########

Java Application -> JMS API -> JMS Provider (JBoss, WebLogic, RobbitMQ, EMS etc) 

##### JMS Components #####
A typical JMS system contains the following components:

JMS Client
JMS Sender
JMS Receiver
JMS Provider
JMS Administered Objects
ConnectionFactory
Destination
JMS Message

=======================================
JMS ProviderSoftware: ORGANIZATION
WebSphere MQ		: IBM
Weblogic Messaging	: Oracle Corporation
Active MQ			: Apache Foundation
Rabbit MQ			: Rabbit Technologies(acquired by Spring Source)
HornetQ				: JBoss
Sonic MQ			: Progress Software
TIBCO EMS			: TIBCO
Open MQ				: Oracle Corporation
SonicMQ				: Aurea Software
=======================================
########## JMS History ##############
JMS 1.0.2	June 2001
JMS 1.1		March 2003
JMS 2.0		May 2013
=======================================
https://www.journaldev.com/9743/jms-messaging-models