> Data Access Object (DAO) support in Spring makes it easy to work with data access technologies like JDBC, Hibernate or JDO in a consistent way. 
- This allows one to switch between the persistence technologies easily. 
- It also allows you to code without worrying about catching exceptions that are specific to each of these technology.

## Name the exceptions thrown by the Spring DAO classes.

------------------------------------
## Which classes are present in spring JDBC API?
Classes present in JDBC API are as follows:

JdbcTemplate
SimpleJdbcTemplate
NamedParameterJdbcTemplate
SimpleJdbcInsert
SimpleJdbcCall
------------------------------------
## What are the ways by which Hibernate can be accessed using Spring?

> There are two ways by which we can access Hibernate using Spring:

1. Inversion of Control with a Hibernate Template and Callback
2. Extending HibernateDAOSupport and Applying an AOP Interceptor node
------------------------------------


http://inheritingjava.blogspot.in/2011/06/java-spring-and-hibernate-interview.html

## What is benefit of using JdbcTemplate ? Why should you use JdbcTemplate in Spring ?
## How do you handle SQLException in Spring?
## How to you setup JDBC connection pool in Spring etc.
