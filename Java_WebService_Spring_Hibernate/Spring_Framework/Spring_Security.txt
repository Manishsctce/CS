######## Spring Security ###########
> Spring Security provides lots of Out of Box functionality a secure enterprise or web application needed like authentication, authorization, session management, password encoding, secure access, session timeout etc


------------------------------------
## How do you control concurrent Session on Java web application using Spring Security?
> we can use Spring Security to control a number of active session in Java web application.
> need to include following xml snippet in Spring Security Configuration file mostly named as applicaContext-security.xml. 

<session-management invalid-session-url="/logout.html">
    <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
</session-management>

------------------------------------
##Drawbacks of Spring Acegi Security

> Lot of XML Configuration
> Too much learning curve
> Does not support Annotations

> Spring Team (Pivotal Team) has integrated “Acegi Security” framework into Spring Framework as “Spring Security” module.

Spring 4 Security Features:

Spring 3.x Security Framework provides the following Features:

Authentication and Authorization.
Supports BASIC,Digest and Form-Based Authentication.
Supports LDAP Authentication.
Supports OpenID Authentication.
Supports SSO (Single Sign-On) Implementation.
Suuports Cross-Site Request Forgery (CSRF) Implementation.
Suuports “Remember-Me” Feature through HTTP Cookies.
Supports Implementation of ACLs
Supports “Channel Secruity” that means automatically switching between HTTP and HTTPS.
Supports I18N (Internationalization).
Supports JAAS (Java Authentication and Authorization Service).
Supports Flow Authorization using Spring WebFlow Framework.
Supports WS-Security using Spring Web Services.
Supports Both XML Configuration and Annotations. Very Less or minimal XML Configuration.

Spring 4.x Security Framework supports the following New Features:
> Supports WebSocket Security.
> Supports Spring Data Integration.
> CSRF Token Argument Resolver.


Spring 4 Security Levels:
> Spring Security supports the following two Levels of Authorization
1. Method Level Authorization
- using AOP (Aspect-Oriented Programming) that means through Aspects

2. URL Level Authorization
- “URL Level Security” by using Servlet filters.

## Spring 4 Security Framework provides the following Advantages:
> Open Source Security Framework
> Flexible, Easy to Develop and Unit Test the applications
> Declarative Security Programming
> Easy of Extendability
> Easy of Maintenance
> Takes full advantage of Spring DI(Dependency Injection) and AOP.
> We can develop Loosely-Coupled Applications.

> Spring 4 Security Module is again divided into 11 sub-modules. It has the following sub-modules:

01. Spring Security Core Module
02. Spring Security Configuration Module
03. Spring Security Web Module
04. Spring Security Tag Library Module
05. Spring Security AspectJ Module
06. Spring Security ACL Module
07. Spring Security LDAP Module
08. Spring Security OpenID Module
09. Spring Security CAS Module
10. Spring Security Cryptography Module
11. Spring Security Remoting Module



http://javarevisited.blogspot.in/2011/11/ldap-authentication-active-directory.html
http://javabeginnerstutorial.com/spring-security-tutorial/spring-security-ldap-authentication-tutorial/
http://www.journaldev.com/8748/spring-security-role-based-access-authorization-example
http://www.journaldev.com/8718/spring-4-security-mvc-login-logout-example
http://www.journaldev.com/2736/spring-security-example-userdetailsservice
http://krams915.blogspot.in/2011/01/spring-security-mvc-using-ldap.html

https://spring.io/guides/gs/authenticating-ldap/