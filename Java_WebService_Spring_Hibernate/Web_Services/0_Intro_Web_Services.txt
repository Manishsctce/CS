## What is Web Service?
> It is client(Consumer) and server(Provider) application that communicate over the network.
OR
> It is client-server model where client applications can access web services over the network. 
- Web services provide endpoint URLs and expose methods that can be accessed over network through client programs 

- webservices can be used if no UI is involved but for web-applications GUI is required

> WEB-SERVICES CONSUME BY ANY APPLICATION NOT FOR USER CONSUMPTION DIRECTLY
Ex- Indian railway exposed there web service API, so that any 3rd party can use this api for there app. 
- All we need to register it for our appl use. They will provide API_KEY and which we can use it as 
http://api.erail.in/trains/?key=API_KEY&stnfrom=NDLS&stnto=BCT&date=5-sep-2017&class=3A

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Why do we need Web Services?

1. TO EXPOSE ANY SERVICE/FUNTIONALITY ON WEB/NETWORK
- service can be remotely invoke by http request. 

2. INTEROPERABILITY 
- It help to communicate across appl/platform develop using different tech.
- It acts as a means of communications between these multiple web applications developed with different programming languages.

3. It help to modularise the application
- any exposed functionality can be used by another functionality further.

4. Web services use industry standard protocol for the communication. 
- All the four layers (Service Transport, XML Messaging, Service Description, and Service Discovery layers) use well-defined protocols in the web services protocol stack

5. Low cost communication unlike EDI (electronic data interchange such as email)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What where in use before web services?

> CORBA and the IIOP protocol were in use before Web services.
- can be problematic in terms of security and ease of deployment

Common Object Request Broker Architecture (CORBA) - it enables collaboration between systems on different operating systems
- CORBA uses an interface definition language (IDL) to specify the interfaces that objects present to the outer world
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is the benefit/Characteristic of Web Services?

> INTEROPERABILITY 
- an application develop in any lang. can communicate with other appl. using web services.

> REUSABILITY - any expose services can be use by another appli for further operation on it. 
> MODULARITY - we can divide any application into number of module WS, so that any particular module can be use by any other application. 

> EXTENSIBILITY - Can be use by any one without deploying any jars/code 
> Synchronous or asynchronous functionality
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is difference between Web Services and Web Application?

> WEB-SERVICES CONSUME BY ANY APPLICATION NOT FOR USER CONSUMPTION DIRECTLY

> A WEB APPLICATION is an application that RUNS ON WEB BROWSER, 
- it return html page to the user.
> A WEB SERVICE is an API wrapped in HTTP that runs on the web server
- It return data in the form of XML/text/json to the client app over HTTP through a standardized messaging system. 

> WEB APPLICATIONS ARE CAPABLE TO MAINTAIN USER SESSION, 
- WEB SERVICES ARE STATELESS

> WEB APP CAN SEND DATA in any format like text/json/html over HTTP/HTTPS
- WEB SERVICES CAN ONLY USE SOAP BASED XML MESSAGE(ie. SOAP protocol) for SOAP-WS to send over HTTP/SMTP/FTP (SOAP message over HTTP layer) and HTTP protocol for REST.

> Web applications are not meant for re-usability 
- a single web service can be used by different kinds of applications

> Web application can access web services to access some data or to perform some tasks, 
- web services can’t access web applications to fetch some data.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is API(Application Program Interface)?

> It ACTS AS AN INTERFACE BETWEEN TWO DIFFERENT APPL so that they can communicate with each other. 
- An API is a method by which the third-party vendors can write programs that interface easily with other programs.
- API exactly defines the methods for one software program to interact with the other
Ex - HostService.getAllHosts() is an API

Ex- In Web applications, the API used is web based. 
- Desktop applications such as spreadsheets and word documents use VBA and COM-based APIs 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is difference between API and WebServices?

> ALL WEB SERVICE ARE API BUT ALL API ARE NOT WEB-SERVICE

> API MAY USE ANY MEANS OF COMMUNICATION to initiate interaction between applications. 
- WEB SERVICE USES SOAP, REST, AND XML-RPC AS A MEANS OF COMMUNICATION OVER MOST COMMONLY USED HTTP PROTOCOL.

> API acts as an interface that is use to communicate with Application each other.
- API is not necessarily web-base. It may use any mean of communication 

> A Web service is designed to have an interface that is shown in form of WSDL (Web Service Description Language). 
- Typically, “HTTP” is the most commonly used protocol for communication. 

> API doesn't need network for its operation
- WebService work on the network.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What are the different types of web services?
There are two types of web services:
1. SOAP
2. RESTful
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is difference between SOA and a web service?

> SOA (Service-Oriented Architecture) 
- It is an architectural model used for the development and integration of services.
- It is used for implementing loosely coupled service based applications
- it can be implement using messaging , RPC and RMI 
- it can also implement using webservices i.e communicating over http .

> WebService is client and server application that communicate over the network.
> web service is a basic building block in a SOA.
EXAMPLE of SOA Application:
Suppose we have multiple Services like Patient Service, Doctor Service, Bed Management Service, Clinic Service. SOA define how they communicate with each other.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
####### Java Web Services API ########
> Java provides it’s own API to create both SOAP as well as REST web services
- Both of these APIs are part of standard JDK installation

1. JAX-WS (Java API for XML Web Services)
> it is a set of APIs for creating WS in XML format(SOAP)
> 2 ways to implement Java Soap web-services 
	a. RPC Style
	b. Doc style

2. JAX-RS (Java API for RESTful Web Services)
> 2 ways to implement Java Restful web-services 
	a. Jersey - it’s not part of standard JDK 
	b. RESTeasy 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## How does a Web Service work?

> Client (e.g. mobile app) sends a request to the server with response data
- When client calls the method, it gets passed to the client stub code… 
- this piece of code converts data to xml(Marshalling) and the xml is sent to the URL present in the wsdl

> Server processes the request (after converting into Java object) according to the requested data then sends the data back to the client 
- response is sent to client in form of xml

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is web services protocol stack?

1. Service Transport - HTTP/SMTP/FTP/BEEP
2. XML Messaging - using SOAP

3. Service Description - using WSDL
- It is responsible for describing the public interface of a specific web services. 
- It used WSDL to describe webservices

4. Service Discovery - using UDDI (Universal Description,Discovery and Integration) 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is the usage of Service Transport Layer in Web service protocol stack?

> The Service Transport Layer is used to transport messages between applications.

This layer includes 
- Hyper Text Transport Protocol (HTTP), 
- Simple Mail Transfer Protocol (SMTP), 
- File Transfer Protocol (FTP), and 
- Blocks Extensible Exchange Protocol (BEEP) (newer protocols)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is HTTP Basic Authentication and how it works?

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What are the communication channels available for a web service?

> Web services use HTTP for its communication. 
- It use HTTP/GET and HTTP/POST method with SOAP message.
- Here HTTP / POST protocol transfers the information between the clients with secure mode. 

> In general, web service is combined with the following protocols. They are,

HTTP / GET
SOAP
While exposing the web services, these channels will be used for communication with the clients. 

- HTTP / GET protocol allows the clients to view transferred data partially at the browser’s address bar. 
- SOAP is used for transferring the confidential data safely.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## How to develop Web services?

> There are 2 approach for creating web services 

1. TOP-DOWN approach i.e CONTRACT FIRST APPROACH:- 
- it start with WSDL(Web Services Description Language) and generate java classes(stubs) from WSDL to implement services 
- we can use "wsimport" tool to generate the java classes from WSDL document.

WSDL -> Generate Stub(Bean/interface) -> implement these interface -> publish endpoint
--------------------------
2. BOTTOM-UP approach i.e CODE FIRST APPROACH
- Here first we create SEI (Service End-point Interface) like HostService(I)
- in WSDL, it will be "wsdl:portType" element and interface methods will become "wsdl:operation" element. 
- For this we need to annotate SEI with required JAX-WS annotation. 

Code First -> Annotate the code -> publish endpoint -> Access the generated WSDL 

Ex - public interface HostService{
	public NestedTree getHostContents(@WebParam(name="hostId")EntityIdentifier hostId) throws AdminException;
	
	public int setRuntimeConf(@WebParam(name="jvmArgsOption")String jvmArgsOption, @WebParam(name="hostId")EntityIdentifier hostId, @WebParam(name="runtimeConf")RuntimeConfigDesc runtimeConf) throws AdminException;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What are different web service messaging format?

1. SOAP
2. REST+XML
3. REST+JSON (REpresentational State Transfer + JavaScript Object Notation)
4. XML RPC 
- XML RPC has both a request and a response format
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is the DIFFERENCE BETWEEN A REST AND SOAP WEB SERVICE?

Below are the main differences between REST and SOAP web service

1. SOAP is simple object access protocol that run on HTTP/TCP/UDP/SMTP.
- REST is Representational state transfer(it is an architectural style) that uses underlying HTTP protocols.

2. REST supports different formats like text, JSON and XML to communicate i.e there is no messaging protocol; 
- SOAP webservices only supports SOAP messaging protocol i.e XML ;

3. SOAP works with operations, which implement some business logic through different interfaces; 
- REST works with resources, each unique URL is some representation of a resource; 

~~~~~~~~~~~~~~~~~~~~~~~~
3. SOAP uses services interfaces to expose the business logic

@WebService 
interface WeatherService{
   @WebMethod   
   public String getWeather(@WebParam(name="cityName") String cityName);
} 

- In REST, intsead of Service interface, URI are exposed to outside world.
@Path("/WeatherService")
class WeatherService{

    @Path("/GetWeather/{cityName}
    public String getWeather(@PathParam("cityName") String cityName){
        ....
    }
}
~~~~~~~~~~~~~~~~~~~~~~~~
4. SOAP request are send using HTTP POST method only because SOAP request formed is usually big and cannot be send in Query string and that is why SOAP request cannot be bookmarked/cached.
- REST request are send using both HTTP GET and POST request due to which GET request CAN BE CACHED here

5. SOAP has built-in Error handling features. So if there is problem with the SOAP request sent, SOAP response will contain error information of it.
- In REST there is no standard in built error handling feature provided and developer need to handle by passing custom response codes.

6 SOAP is SLOW because of XML messaging protocol, messages are big which require time to parse and consume more bandwidth 
- REST is fast bcz of JSON format, it has in-built support with JavaScript and the browser, making the API consuming and parsing lot more easy.

7. SOAP supports SSL security and WS-security(Web Service-security); 
- REST only supports SSL security;

8. SOAP supports ACID (Atomicity, Consistency, Isolation, Durability); 
- REST supports transactions, but it is neither ACID compliant nor can provide two phase commit. 

9. In SOAP, we use WSDL to expose the web service document
- In REST, there is no need to expose any web services. i.e NO service definition 
- WADL,
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Does Web Service call is synchronous or asynchronous ?

> A document-oriented approach is used for asynchronous class of services

There are two ways to obtain the response -
1. The client that invoked the service periodically checks the status of the request using the ID that was provided at the time the request was submitted. (This is also known as polling.)

2. web service can then respond, at some later time, by making a call back to the client with the response.
- Therefore, a client of a web service that contains a callback operation is special in that the client itself must provide an endpoint. 
- We call this the callback endpoint and define an endpoint as a unique address identified by a URI to which SOAP request messages can be sent.
> Clients of web services that support callback operations must have a web service endpoint themselves, which the web service can use for sending callback requests
> it requires an implementation of event-listener

?> In order to generate a service endpoint interface with asynchronous methods the following binding declaration file will be passed to wsimport 
<bindings
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    wsdlLocaption="http://localhost:8080/jaxws-async/addnumbers?WSDL"
    xmlns="http://java.sun.com/xml/ns/jaxws">
    <bindings node="wsdl:definitions">
        <package name="async.client"/>
        <enableAsyncMapping>true</enableAsyncMapping>
    </bindings>
</bindings>


https://briskwalk.wordpress.com/2013/06/08/how-to-make-asynchronous-call-to-soap-web-service-using-jax-ws/
https://examples.javacodegeeks.com/enterprise-java/jws/jax-ws-asynchandler-example/
https://axis.apache.org/axis2/java/core/docs/jaxws-guide.html
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is Web service Provider?

> It is the provider of web service 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is JAX-RPC ?
## Have you worked on Spring and Web-services ?
## What is WebServiceTemplate etc
## What is difference between RMI and Web Services
## Can we maintain user session in web services?
No, web service is stateless.
-----------------------
## What is the use of Accept and Content-Type Headers in HTTP Request?



## What is sun-jaxws.xml file?
---------------------------
## What is the use of @XmlRootElement annotation? [for more detail ref JAXB.txt]

> it is define in "javax.xml.bind.annotation" package and 
> it is use when we want to marshals and unmarshals any POJO.
> it indicate that the POJO name element will be the root element.
---------------------------
## How to set different status code in HTTP response?

How one can provide API to users?

To provide an API to the users, one can easily do this with an “open table”. All you need to do is to write open table which is basically an XML schema that point to a web service.

## Explain few disadvantages of Response Caching?

> Response Caching is useless or incompetent when method accepts extensive amount of values because caching means to store lot of information. 
-  Also, if the method depends on external source of information, and that are not provided within the parameters then such methods are bypassed.
-----------------------------------
## What is the alternate solution to Response Caching?

> One can use Data Caching (System.Web.Caching.Cach) instead of Response Caching.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## REST Service
- When you read a resource you send an HTTP GET request. 
- If you need to write a resource, you would send an HTTP PUT instead. 
- If you need to delete a resource you would send an HTTP DELETE etc.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## What is JAX-WS?

> JAX-WS (Java API for XML Web Services) is a set of APIs for creating web services in XML format.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Define Entrust Identification Service?

> Entrust Identification Service comes from the Entrust Security Transaction Platform. 
- This platform allows companies to CONTROL THE IDENTITIES that are trusted to perform transactions for Web services transactions.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Define Entrust Entitlements Service?

> This service VERIFIES entities that attempt to access a web service. 
- For Example, the authentication service, the Entitlements Service ensures security in business operations.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Define Entrust Privacy Service?

> As its name implies, it deals with security and confidentiality. 
- This service ENCRYPTS DATA to ensure that only concerned parties can access the data.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
15) What do you mean by PKI?

It means Public-Key Infrastructure.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## what DISCO is?

> DISCO means discovery. It groups the list of interrelated web services. 
- The organization that provides web services, issues a DISCO file on its server 
- DISCO file contains the links of all the provided web services. 
- This standard is good when client knows the company already. Also it can be used within a local network as well.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## difference bet concreate and abstract wsdl?
## how to communicate between two Jsp pages ?
## how 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##Web Services Development Frameworks
1. Apache AXIS2
- it is a Web Service engine for deploying the web services
-  installing Axis2 in a J2EE compliant servlet container. Deploy axis2.war in tomcat/webapps dir and invoke http://localhost:8080/axis2/ 
- User: admin  ; Password: axis2 

 http://localhost:8080/axis2/services/HelloWorldService?wsdl
- In Axis2, the service configuration file used is services.xml. It contain "ServiceClass" parameter specifies the class that will be exposed as web service. 
- The other important parameters are targetNamespace and schemaNamespace.

2. Apache CXF, 
3. Spring WS.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A Context Descriptor is simply an XML file that contains Tomcat related configuration for a Context, e.g naming resources or session manager configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is Endpoint?
> The endpoint is a connection point where HTML files or active server pages are exposed. 
- Endpoint IS THE URL WHERE SERVICE CAN BE ACCESSED BY A CLIENT APPLICATION. 
- The SAME WEB SERVICE CAN HAVE MULTIPLE ENDPOINTS FOR DIFFERENT PROTOCOLS. 
- endpoint is always tied to one Binding and one implementor

- An end point indicates a specific location for accessing a service using a specific protocol and data format.
> endpoint can either be in published or unpublished state

EXAMPLE: 
- web service is located at http://localhost:8080/foo/mywebservice - This is ENDPOINT
- WSDL is at http://localhost:8080/foo/mywebservice?wsdl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is use of javax.xml.ws.Endpoint class?
> it provides useful methods to create endpoint and publish existing implementation as web service. 
- This comes handy in testing web services before making further changes to deploy it on actual server.

> JAX-WS Endpoint class has 2 important methods
## publish() 
- used to publish or start the web service, and 
public static Endpoint publish(java.lang.String address,
 java.lang.Object implementor)

EXAMPLE:
Endpoint.publish("http://localhost:8888/ws/person", new PersonServiceImpl());
----------------- 
## stop() 
- used to un-publish or stop the web service.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is QName(Qualified Name)?
> It is a tuple that represents an XML qualified name. 
- The tuple is composed of a namespace URI and the local part of the qualified name.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is SEI(Service Endpoint Interface) and SIB(Service Implementation Bean)? 
> SEI is a Java interface that defines all the methods to be exposed as a Web service Ex- HostService
- implementation of those method should define in another class called SIB. Ex- HostServiceImpl

> To implement a SOAP based webservice using JAX-WS API’s, it could be done using a single class. 
- But for BEST PRACTICES, we should FIRST DEFINE AN INTERFACE (i.e SEI) and its implementation in SIB

EXAMPLE:-
//SEI(Service Endpoint Interface)
@WebService
public interface CalculatorServer {
    @WebMethod
    int sum(int a, int b);
	
    @WebMethod
    int diff(int a, int b);

    @WebMethod
    int multiply(int a, int b);

    @WebMethod
    int divide(int a, int b);
}
--------------------
//SIB(Service Implementation Bean)
@WebService(endpointInterface = "com.javacodegeeks.examples.endpoint.CalculatorServer")
public class CalculatorServerImpl implements CalculatorServer {
  @Override
  public int sum(int a, int b) {
      return a+b;
  }
  
  @Override
  public int diff(int a, int b) {
      return a-b;
  }

  @Override
  public int multiply(int a, int b) {
      return a*b;
  }

  @Override
  public int divide(int a, int b) {
      return a/b;
  }
}


import javax.xml.ws.Endpoint;
public class CalculatorServerPublisher {
  public static void main(String[] args) {
      Endpoint ep = Endpoint.create(new CalculatorServerImpl());
       
      ep.publish("http://127.0.0.1:10000/calcServer");
   
      //Do something
     
      //Comment below line if service is meant to be running always
      ep.stop();
  }
}

> endpoint publisher that we configured above is single threaded and hence, can only handle one request at a time. 
> jax-ws provides api to set executor to the endpoint. This means that Executor shall be used to dispatch any incoming request to the service implementor.

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.xml.ws.Endpoint;

public class CalculatorServerMultiThreadedImpl {
  public static void main(String[] args) {
      ExecutorService es = Executors.newFixedThreadPool(5);
      Endpoint ep = Endpoint.create(new CalculatorServerImpl());
      ep.setExecutor(es);
      ep.publish("http://127.0.0.1:10000/calcServer");
  }
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is Service Gateway?
> service Gateway provides a central access point for managing, monitoring, and securing access to your publicly exposed web services.
- It would also allow you to consolidate services across disparate endpoints as if they were all coming from a single host. 
- A service gateway encapsulates all the details of accessing the service into a single component and hides the component 
- behind an interface that has no direct dependencies on the underlying communications channel.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
?## Difference between End-point and Gateway?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## what is JAXR?
> JAXR is the JAVA programming APIs for Java platform application to access and programmatically interact with various kinds of meta-data registries.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Explain what does the JAXR architecture consist of?

> JAXR architecture is consists of a JAXR client and JAXR provider.

JAXR client: It is a client program which uses the JAXR API to use a registry through a JAXR provider
JAXR provider: 
- It is an implementation of the JAXR API that provide access to a particular registry provider or to a class of registry providers that are built on a common speicifications.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Explain what is JAXM messaging models?

> There are two types of messaging models for JAXM synchronous and asynchronous

1. Synchronous messaging model: 
> In such type of model, client directly communicates with the source. 
- In this, the client will send the request and waits.

2. Asynchronous messaging model: 
> In this model, client directs the message to the messaging provider and returns back. 
- Messaging provider then executes the routing of the message to the end source.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## If a client connects to a web service, how do we identify the user? Is the user authorized to use the service?
> We can use any of below : 
1. SOAP Digital Signature (SOAP-DSIG) 
- leverages public key cryptography to digitally sign SOAP messages. It enables the client or server to validate the identity of the other party
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What are the basic requirement of Security?
1. Authentication - authorized user
2. Authorization (or Access Control) : 
3. Confidentiality, privacy : Keeping information secret.It is achieved by encrypting the content of a message and obfuscating the sending and receiving parties' identities.
4. Integrity, non repudiation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## How we can ensure the secure web services? 
1. we can use transport security to protect the communication channel between the Web service consumer and Web service provider.
2. we can use Message-level security to ensure confidentiality by digitally encrypting message parts; integrity using digital signatures;
====================================
####### STUB & SKELETON #######

## What is SKELTON ?
SKELTON - Server side 
> It is RESPONSIBLE FOR DISPATCHING THE CALL at server side.
 
> it receives an incoming method invocation from stub and does following (read->process->write & send)
- unmarshals (reads) the parameters for the remote method, 
- invokes the method on the actual remote object implementation, and 
- marshals (writes and transmits) the result (return value or exception) to the caller. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is STUB ?
STUB - Client side
> A stub is client's local representative(i.e proxy) for a remote object.
> caller invokes a method on the local stub which is responsible for carrying out the method call on the remote object(i.e network).
- a stub implements the same set of interfaces that a remote object implements

> stub can be generate using wsimport tool 
Ex - wsimport -keep http://localhost:9999/ws/hello?wsdl 

When a stub's method is invoked, it does the following: 
1) initiates a network connection with the remote JVM containing the remote object, 
2) marshals (writes and transmits) the parameters to the remote JVM, 
3) waits for the result of the method invocation, 
4) unmarshals (reads) the return value or exception returned, and 
5) returns the value to the caller. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is difference between stub and skelton?

> Skeleton belongs to service provider side and stub belongs to receiver side(client side)
- At lower level stub and skeleton communicate with each other
===================================
## What do you understand by XML-RPC?

Ans: RPC is Remote Procedure Call and as the name suggests, it is the method of calling a procedure or function available on any remote computer.

XML stands for Extensible Markup Language. Thus XML-RPC represents a simple protocol that performs RPCs by using XML messaging. This has been considered as an excellent tool for connecting different environments and also establishing connections between wide varieties of computers.

## Explain features of XML-RPC?

Ans: The major features of XML-RPC are enlisted below

RPCs are performed using simple XML language.
XML encoded Requests are sent via HTTP POST.
XML Response is embedded in HTTP response.
It is considered as platform-independent.
It allows communication between diverse applications.
It uses HTTP protocol for passing information between client and server computers.
It has small XML vocabulary for describing request and response’s nature.

===================================

$ curl http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=bd82977b86bf27fb59a04b61b657fb6f
{"coord":{"lon":-0.13,"lat":51.51},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":282,"pressure":1022,"humidity":87,"temp_min":277.15,"temp_max":285.15},"visibility":10000,"wind":{"speed":1.5},"clouds":{"all":90},"dt":1445577409,"sys":{"type":1,"id":5093,"message":0.0201,"country":"GB","sunrise":1445582275,"sunset":1445619056},"id":2643743,"name":"London","cod":200}

You can also specify timeout using -m option as shown below:

$ curl -m 2 http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=bd82977b86bf27fb59a04b61b657fb6f

This request will timeout in 2 seconds if it doesn't receive any response.

> Only difference between curl and wget is that curl will print output in console and wget will store it in the file

wget http://localhost:8080/index.html

will download the content of index.html and store into a file with the same name.

You can also use curl to send HTTP post request. All you need to do is use the --data option to specify the data you want to POST to web service e.g.

$ curl --data "param1=value1&param2=value2" http://locahost:8080/weather

if you want to send a data from file to web service, you can also use the following command:

$ curl -X POST -d @filename http://locahost:8080/weather

Similarly, if you want to upload a file you can do so by executing the following command:

$ curl --form "fileupload=@filename.txt" http://locahost:8080/weather