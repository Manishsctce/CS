## What is Android?

> Android is a software package and linux based operating system for mobile/wearable/tablet/TV computers and smartphones.

> It is developed by Google and later the OHA (Open Handset Alliance). 
> Java language is mainly used to write the android code even though other languages can be used.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is Open Handset Alliance (OHA)?
> It's a consortium of 84 companies such as google, samsung, AKM, synaptics, KDDI, Garmin, Teleca, Ebay, Intel etc.

> It was established on 5th November, 2007, led by Google. 
- It is committed to advance open standards, provide services and deploy handsets using the Android Plateform.


=======================================
######## ANDROID ARCHITECTURE #########
> android architecture or Android software stack is categorized into 5 parts:

1. Linux Kernel
> It is the heart of android arch. that exists at the root of android arch. 
- It is responsible for device drivers, power management, memory management, device management and resource access.

2. Native Libraries (middleware),
> It is responsible for browser support, SQLite is for database, FreeType for font support, Media for playing and recording audio and video formats.
> Native libraries such as WebKit, OpenGL, FreeType, SQLite, Media, C runtime library (libc) etc

3. Android Runtime
> there are core libraries and DVM (Dalvik Virtual Machine) which is responsible to run android app. 
- DVM is like JVM but it is optimized for mobile devices. 
- It consumes less memory and provides fast performance.

4. Application Framework
> On the top of Native libraries and android runtime, there is android framework.
> It includes Android API's such as UI (User Interface), telephony, resources, locations, Content Providers (data) and package managers. 
> It provides a lot of classes and interfaces for android application development.

5. Applications
=======================================
########### APP COMPONENTS ############
> App components are the essential building blocks of an Android app. 
- Each component is an entry point through which the system or a user can enter your app. Some components depend on others.

> There are four different types of app components:

1. Activities
2. Services
3. Broadcast receivers
4. Content providers
=======================================
## what is Android Emulator?

> It is an Android Virtual Device (AVD), which represents a specific Android device.
- We can use the Android emulator as a target device to execute and test our Android application on our PC. 
- It provides almost all the functionality of a real device
=======================================
## Internal Details of Android App 

helloworld
	src/
		com.example.helloworld	
			MainActivity.java
			MyClass.kt 
	gen/
		com.example.helloworld
			BuildConfig.java
			R.java  <----- Generated class 
	bin/  <--------------- contains apk files
	libs/
	res/
		drawable-hdpi/
		layout/
			activity_main.xml
		menu/
		values/
			strings.xml 
			styles.xml 
			
> R.java : It is the auto-generated file that contains IDs for all the resources of res dir. 
- It is generated by aapt(Android Asset Packaging Tool). 
- Whenever we create any component on activity_main, a corresponding ID is created in the R.java file which can be used in the Java Source file later.

			
=======================================
##### Dalvik Virtual Machine(DVM) #####
> It is an android virtual machine optimized for mobile devices. 
- It optimizes the virtual machine for memory, battery life and performance.

> Dalvik is a name of a town in Iceland. 
- The Dalvik VM was written by Dan Bornstein.


> The Dex compiler converts the class files into the .dex file that run on the Dalvik VM. 
- Multiple class files are converted into one dex file.

.java --javac--> .class --dex compiler(DX)--> .dex --aapt--> .apk 
=======================================
######## AndroidManifest.xml ##########

> This file contains information of package, including components of the app such as activities, services, broadcast receivers, content providers etc.

> It performs some other tasks also:
- It is responsible to protect the app to access any protected parts by providing the permissions.
- It also declares the android api that the app is going to use.
- It lists the instrumentation classes. The instrumentation classes provides profiling and other informations. These informations are removed just before the application is published etc.

> This is the required xml file for all the android application and located inside the root directory.

EXAMPLE:
<manifest xmlns:android="http://schemas.android.com/apk/res/android"  
    package="com.javatpoint.hello"  
    android:versionCode="1"  
    android:versionName="1.0" >  
  
    <uses-sdk  
        android:minSdkVersion="8"  
        android:targetSdkVersion="15" />  
  
    <application  
        android:icon="@drawable/ic_launcher"  
        android:label="@string/app_name"  
        android:theme="@style/AppTheme" >  
        <activity  
            android:name=".MainActivity"  
            android:label="@string/title_activity_main" >  
            <intent-filter>  
                <action android:name="android.intent.action.MAIN" />  
  
                <category android:name="android.intent.category.LAUNCHER" />  
            </intent-filter>  
        </activity>  
    </application>  
</manifest> 

android:icon - represents the icon for all the android app components.
android:label - works as the default label for all the app components.
android:theme - represents a common theme for all the android activities
=======================================
#### Screen Orientation ####
> screenOrientation is the attribute of activity element. 
> we need to define it in the AndroidManifest.xml file.

SYNTAX:
<activity android:name="package_name.Your_ActivityName"  
      android:screenOrientation="orirntation_type">  
</activity> 

The common values for screenOrientation attribute are as follows:

1. unspecified	
- It is the default value. In such case, system chooses the orientation.

2. portrait	
- taller not wider

3. landscape	
- wider not taller

4. sensor	
- orientation is determined by the device orientation sensor.
=======================================
#### 
=======================================
#### 
=======================================
#### 
=======================================
#### 
=======================================
#### 
=======================================
## What is adb?

> Adb is short for Android Debug Bridge. 
> It allows developers the power to execute remote shell commands. 
- Its basic function is to allow and control communication towards and from the emulator port.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## What is ANR?

ANR is short for Application Not Responding. This is actually a dialog that appears to the user whenever an application have been unresponsive for a long period of time.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## 
