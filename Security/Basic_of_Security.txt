Plain text(PT) - human readable
Cipher text(CT) - not human readable

Encryption(ENC) 
> process of converting Plain text to Cipher text
> It is usually done at server-side
> Study of it is called Cryptography

Decryption(DEC)
> process of converting Cipher text to Plain text
> It is usually done at client-side
> Study of it is called Cryptanalysis

> Study of both Encryption and Decryption is called Cryptology

Stream Cipher 
- bit by bit conversion from PT to CT

Block Cipher 
- block by block conversion from PT to CT 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##### PROCESS OF ENCRYPTION #####
1. Symmetric Encryption
> Same key(Ks) is used for ENC and DEC

2. Asymetric Encryption
> 2 independent key : public key(KU) and private key(KR)
- KU is used to encrypt and KR is used to decrypt 

> Every user have pair of key 
=======================================
########## TYPE OF ATTACK #############

1. PASSIVE ATTACK 
> No Data Modification will be done 

A.  Release of the content
- Eavesdropping - just reading data in-between 

B. Traffic Analysis 
------------------------
2. Active Attack 
> Data Modification will be done 

2A. Masquerade Attack 
- data sent to receiver by 3rd party 
- here 3rd party intent to be Authorize sender

2B. REPLAY ATTACK
- once receiver receive msg from sender 
- 2nd receiver receive msg from intruder 
- here receiver doesn't understand which 1 is correct 

2C. DATA Modification
- here data is modified in-between

2D. DENIAL OF SERVICE 
-  
=======================================
######### SECURITY SERVCIES ###########
> we have to provide below service while sending data over network. 

1. Access Control 
- prevent unauthorized access to resource 

2. Authentication
- verification of user identity 

3. Confidentiality
- providing security to the data send through network. 

4. Integrity
- no modification should be done during the transmission.

5. Non-Repudiation
- preventing from denial of service attacks.
=======================================
## Authorization - what the user wants to do?
## Authentication - who is doing? 
=======================================
1. Substitution 

1A. Caesar Cipher
key - numerical i.e. 1 < k <= 26
char - (p+k)mod26 

EXAMPLE - PT - HELLO , k = 4 
H-8 : C(H) = (8+4)mod26 = 12 = L
E-5 : C(E) = (5+4)mod26 =  9 = I
L-12: C(L) = (12+4)mod26= 16 = P 
L-12: C(L) = (12+4)mod26 =16 = P 
O-15: C(O) = (15+4)mod26 =19 = S 
 
PT - HELLO  and CT - LIPPS 
1B. Play-fair Cipher  

2. Transposition
=======================================
## CYBER-ATTACK 
> It is an exploitation of computer systems and networks. It uses malicious code to alter computer code, logic or data and lead to cybercrimes, such as information and identity theft.

> Cyber-attacks can be classified into 2 categories:
1. Web-based Attacks
2. System-based Attacks 
=======================================
######### WEB-BASED ATTACKS ###########

1. Injection attacks

> It is the attack in which some data will be injected into a web app to manipulate the app and fetch the required information.

Example- SQL Injection, code Injection, log Injection, XML Injection etc.

2. DNS Spoofing
> It is a type of computer security hacking. Whereby a data is introduced into a DNS resolver's cache causing the name server to return an incorrect IP address, diverting traffic to the attackers computer or any other computer. 
- The DNS spoofing attacks can go on for a long period of time without being detected and can cause serious security issues.

3. Session Hijacking
- It is a security attack on a user session over a protected network. 
- Web apps create cookies to store the state and user sessions. 
- By stealing the cookies, an attacker can have access to all of the user data.

4. Phishing
- It is a type of attack which attempts to steal sensitive info like user login credentials and credit card number. 
- It occurs when an attacker is masquerading as a trustworthy entity in electronic communication.

5. Brute force
- It is a type of attack which uses a trial and error method. 
- This attack generates a large number of guesses and validates them to obtain actual data like user password and personal identification number. This attack may be used by criminals to crack encrypted data, or by security, analysts to test an organization's network security.

6. Denial of Service
- It is an attack which meant to make a server or network resource unavailable to the users. 
- It accomplishes this by flooding the target with traffic or sending it information that triggers a crash. It uses the single system and single internet connection to attack a server. It can be classified into the following-

A. Volume-based attacks
- Its goal is to saturate the bandwidth of the attacked site, and is measured in bit per second.

B. Protocol attacks
- It consumes actual server resources, and is measured in a packet.

Application layer attacks- Its goal is to crash the web server and is measured in request per second.

7. Dictionary attacks
- This type of attack stored the list of a commonly used password and validated them to get original password.

8. URL Interpretation

It is a type of attack where we can change the certain parts of a URL, and one can make a web server to deliver web pages for which he is not authorized to browse.

9. File Inclusion attacks

It is a type of attack that allows an attacker to access unauthorized or essential files which is available on the web server or to execute malicious files on the web server by making use of the include functionality.

10. Man in the middle attacks

It is a type of attack that allows an attacker to intercepts the connection between client and server and acts as a bridge between them. Due to this, an attacker will be able to read, insert and modify the data in the intercepted connection.
=======================================
## How to create App security design requirement?

###Authentication 
Identity spoofing, passsword cracking, elevation of privilege and unauth access

=======================================
#### BEst practice
1. Input/Data Validation 
- be careful with cannonicalization issue, 


=======================================
#######
> Secured Socket Layer (SSL)/ Transport Layer Security (TLS) enable a secured connection between the client and the web server.

> Java provides various security based APIs which can help to create a secured connection with the client and sending / receiving messages in an encrypted format:
1. Java Cryptography Architecture(JCA)
2. Java Cryptographic Extension(JCE)
3. Java Secured Socket Extension (JSSE)

## How does browsers recognizes the authenticity of the application or website using the certificates?

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
=======================================
########### MESSAGE DIGEST ############
> Values returned by a hash function are called message digest or simply hash values

> Java provides a class named MessageDigest which belongs to the package java.security.
EXAMPLE:
//Creating the MessageDigest object  
MessageDigest md = MessageDigest.getInstance("SHA-256");

//Passing data to the created MessageDigest Object
md.update(message.getBytes());

//Compute the message digest
byte[] digest = md.digest();  

=======================================
########### MESSAGE DIGEST ############

## Public Key Infrastructure (PKI) 
> It refers to the setup that enables the secure exchange of information over the network using public-key encryption
- This setup relies on trust that is built between the parties involved in the communication. 
- This trust is based on digital certificates issued by a neutral and trusted authority known as a Certificate Authority (CA).


#### PKI supports in Java ####

## KEYSTORE
> Keys and certificates used/generated are stored in a data base called as keystore.
- By default this database is stored in a file named .keystore.

> By default, Java has a keystore file located at JAVA_HOME/jre/lib/security/cacerts.
- We can access this keystore using the default keystore password 'changeit'

## How to store a key in the keystore?

1: Create a KeyStore object
2: Load the KeyStore object
3: Create the KeyStore.ProtectionParameter object


EXAMPLE:
public class StoringIntoKeyStore{
   public static void main(String args[]) throws Exception {
      //Creating the KeyStore object
      KeyStore keyStore = KeyStore.getInstance("JCEKS");

      //Loading the KeyStore object
      char[] password = "changeit".toCharArray();
      String path = "C:/Program Files/Java/jre1.8.0_101/lib/security/cacerts";
      java.io.FileInputStream fis = new FileInputStream(path);
      keyStore.load(fis, password);
      
      //Creating the KeyStore.ProtectionParameter object
      KeyStore.ProtectionParameter protectionParam = new KeyStore.PasswordProtection(password);

      //Creating SecretKey object
      SecretKey mySecretKey = new SecretKeySpec("myPassword".getBytes(), "DSA");
      
      //Creating SecretKeyEntry object
      KeyStore.SecretKeyEntry secretKeyEntry = new KeyStore.SecretKeyEntry(mySecretKey);
      keyStore.setEntry("secretKeyAlias", secretKeyEntry, protectionParam);

      //Storing the KeyStore object
      java.io.FileOutputStream fos = null;
      fos = new java.io.FileOutputStream("newKeyStoreName");
      keyStore.store(fos, password);
      System.out.println("data stored");
   }
}

## CertStore: 
> Additionally, Java has the CertStore class, which represents a public repository of potentially untrusted certificates and revocation lists. 
- We need to retrieve certificates and revocation lists for certificate path building amongst other usages.

> Java has a built-in trust-store called “cacerts” that contains certificates for well known CAs.

